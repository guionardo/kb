{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Here I will add my solutions to my daily-base problems. Want to contribute? Write an issue . Last changes Group Doc Update Tools Network tools 2023-10-23 Tools Using local mail as notification tool 2023-10-20 Python Tutorial Metaclass 2023-05-17 Tools Tools bookmarks 2023-04-28 Python Gerador de ca\u00e7a-palavras 2023-04-18 Home Welcome 2023-04-04 Docker MongoDB and PostgreSQL in portainer stack 2023-04-04 Architecture Architecture bookmarks 2023-03-23 Vsc Ci Cd Version Control Systems, CI, CD bookmarks 2023-03-23 Free Pascal Free Pascal Shared DLL 2023-02-28","title":"Welcome"},{"location":"#welcome","text":"Here I will add my solutions to my daily-base problems. Want to contribute? Write an issue .","title":"Welcome"},{"location":"#last-changes","text":"Group Doc Update Tools Network tools 2023-10-23 Tools Using local mail as notification tool 2023-10-20 Python Tutorial Metaclass 2023-05-17 Tools Tools bookmarks 2023-04-28 Python Gerador de ca\u00e7a-palavras 2023-04-18 Home Welcome 2023-04-04 Docker MongoDB and PostgreSQL in portainer stack 2023-04-04 Architecture Architecture bookmarks 2023-03-23 Vsc Ci Cd Version Control Systems, CI, CD bookmarks 2023-03-23 Free Pascal Free Pascal Shared DLL 2023-02-28","title":"Last changes"},{"location":"tags/","text":"Tags api Generating QRCode using google api architecture Architecture bookmarks audio Atalho para trocar dispositivo de \u00e1udio no Linux automation Atalho para trocar dispositivo de \u00e1udio no Linux bash Commands and Aliases Cronjob to clean all dotnet projects Creating animated gifs from your terminal Atalho para trocar dispositivo de \u00e1udio no Linux benchmark Fast folder iteration in python c_sharp Valida\u00e7\u00e3o de CPF e CNPJ cnpj Valida\u00e7\u00e3o de CPF e CNPJ connectivity Network tools console Creating animated gifs from your terminal Using local mail as notification tool cpf Valida\u00e7\u00e3o de CPF e CNPJ cron Cronjob to clean all dotnet projects csharp C# bookmarks Cronjob to clean all dotnet projects Fixing DotNet on Ubuntu database MongoDB and PostgreSQL in portainer stack dll Free Pascal Shared DLL docker MongoDB and PostgreSQL in portainer stack MongoDB docker-compose PostgreSQL docker-compose HTTP Hello World server for testing purposes docker-compose MongoDB and PostgreSQL in portainer stack MongoDB docker-compose PostgreSQL docker-compose dotnet Cronjob to clean all dotnet projects Fixing DotNet on Ubuntu environment Python Virtual Environment Setup file system Detecting filesystem events fpc Free Pascal Shared DLL gif Creating animated gifs from your terminal golang Golang bookmarks Detecting filesystem events Atalho para trocar dispositivo de \u00e1udio no Linux HTTP Hello World server for testing purposes http HTTP Hello World server for testing purposes jogo Gerador de ca\u00e7a-palavras js JavaScript bookmarks linux Atalho para trocar dispositivo de \u00e1udio no Linux mail Using local mail as notification tool mongodb MongoDB and PostgreSQL in portainer stack MongoDB docker-compose monitoring Process Monitoring Graphics network Network tools notification Detecting filesystem events Using local mail as notification tool portainer MongoDB and PostgreSQL in portainer stack postgresql MongoDB and PostgreSQL in portainer stack PostgreSQL docker-compose process Process Monitoring Graphics python Python bookmarks Gerador de ca\u00e7a-palavras Fast folder iteration in python Tutorial Metaclass Python Virtual Environment Setup qrcode Generating QRCode using google api server HTTP Hello World server for testing purposes setup Fixing DotNet on Ubuntu shell Commands and Aliases speed Network tools terminal Creating animated gifs from your terminal Using local mail as notification tool tutorial Tutorial Metaclass vfp Free Pascal Shared DLL Visual Fox Pro bookmarks","title":"Tags"},{"location":"tags/#tags","text":"","title":"Tags"},{"location":"tags/#api","text":"Generating QRCode using google api","title":"api"},{"location":"tags/#architecture","text":"Architecture bookmarks","title":"architecture"},{"location":"tags/#audio","text":"Atalho para trocar dispositivo de \u00e1udio no Linux","title":"audio"},{"location":"tags/#automation","text":"Atalho para trocar dispositivo de \u00e1udio no Linux","title":"automation"},{"location":"tags/#bash","text":"Commands and Aliases Cronjob to clean all dotnet projects Creating animated gifs from your terminal Atalho para trocar dispositivo de \u00e1udio no Linux","title":"bash"},{"location":"tags/#benchmark","text":"Fast folder iteration in python","title":"benchmark"},{"location":"tags/#c_sharp","text":"Valida\u00e7\u00e3o de CPF e CNPJ","title":"c_sharp"},{"location":"tags/#cnpj","text":"Valida\u00e7\u00e3o de CPF e CNPJ","title":"cnpj"},{"location":"tags/#connectivity","text":"Network tools","title":"connectivity"},{"location":"tags/#console","text":"Creating animated gifs from your terminal Using local mail as notification tool","title":"console"},{"location":"tags/#cpf","text":"Valida\u00e7\u00e3o de CPF e CNPJ","title":"cpf"},{"location":"tags/#cron","text":"Cronjob to clean all dotnet projects","title":"cron"},{"location":"tags/#csharp","text":"C# bookmarks Cronjob to clean all dotnet projects Fixing DotNet on Ubuntu","title":"csharp"},{"location":"tags/#database","text":"MongoDB and PostgreSQL in portainer stack","title":"database"},{"location":"tags/#dll","text":"Free Pascal Shared DLL","title":"dll"},{"location":"tags/#docker","text":"MongoDB and PostgreSQL in portainer stack MongoDB docker-compose PostgreSQL docker-compose HTTP Hello World server for testing purposes","title":"docker"},{"location":"tags/#docker-compose","text":"MongoDB and PostgreSQL in portainer stack MongoDB docker-compose PostgreSQL docker-compose","title":"docker-compose"},{"location":"tags/#dotnet","text":"Cronjob to clean all dotnet projects Fixing DotNet on Ubuntu","title":"dotnet"},{"location":"tags/#environment","text":"Python Virtual Environment Setup","title":"environment"},{"location":"tags/#file-system","text":"Detecting filesystem events","title":"file system"},{"location":"tags/#fpc","text":"Free Pascal Shared DLL","title":"fpc"},{"location":"tags/#gif","text":"Creating animated gifs from your terminal","title":"gif"},{"location":"tags/#golang","text":"Golang bookmarks Detecting filesystem events Atalho para trocar dispositivo de \u00e1udio no Linux HTTP Hello World server for testing purposes","title":"golang"},{"location":"tags/#http","text":"HTTP Hello World server for testing purposes","title":"http"},{"location":"tags/#jogo","text":"Gerador de ca\u00e7a-palavras","title":"jogo"},{"location":"tags/#js","text":"JavaScript bookmarks","title":"js"},{"location":"tags/#linux","text":"Atalho para trocar dispositivo de \u00e1udio no Linux","title":"linux"},{"location":"tags/#mail","text":"Using local mail as notification tool","title":"mail"},{"location":"tags/#mongodb","text":"MongoDB and PostgreSQL in portainer stack MongoDB docker-compose","title":"mongodb"},{"location":"tags/#monitoring","text":"Process Monitoring Graphics","title":"monitoring"},{"location":"tags/#network","text":"Network tools","title":"network"},{"location":"tags/#notification","text":"Detecting filesystem events Using local mail as notification tool","title":"notification"},{"location":"tags/#portainer","text":"MongoDB and PostgreSQL in portainer stack","title":"portainer"},{"location":"tags/#postgresql","text":"MongoDB and PostgreSQL in portainer stack PostgreSQL docker-compose","title":"postgresql"},{"location":"tags/#process","text":"Process Monitoring Graphics","title":"process"},{"location":"tags/#python","text":"Python bookmarks Gerador de ca\u00e7a-palavras Fast folder iteration in python Tutorial Metaclass Python Virtual Environment Setup","title":"python"},{"location":"tags/#qrcode","text":"Generating QRCode using google api","title":"qrcode"},{"location":"tags/#server","text":"HTTP Hello World server for testing purposes","title":"server"},{"location":"tags/#setup","text":"Fixing DotNet on Ubuntu","title":"setup"},{"location":"tags/#shell","text":"Commands and Aliases","title":"shell"},{"location":"tags/#speed","text":"Network tools","title":"speed"},{"location":"tags/#terminal","text":"Creating animated gifs from your terminal Using local mail as notification tool","title":"terminal"},{"location":"tags/#tutorial","text":"Tutorial Metaclass","title":"tutorial"},{"location":"tags/#vfp","text":"Free Pascal Shared DLL Visual Fox Pro bookmarks","title":"vfp"},{"location":"api/generating_qrcode/","tags":["api","qrcode"],"text":"Google API for generating QRCode Example Text Only https://chart.googleapis.com/chart?chs=256x256&cht=qr&chl=GUIONARDO Parameters chs = size in pixels cht = type: qr chl = Content Sample","title":"Generating QRCode using google api"},{"location":"api/generating_qrcode/#google-api-for-generating-qrcode","text":"","title":"Google API for generating QRCode"},{"location":"api/generating_qrcode/#example","text":"Text Only https://chart.googleapis.com/chart?chs=256x256&cht=qr&chl=GUIONARDO","title":"Example"},{"location":"api/generating_qrcode/#parameters","text":"chs = size in pixels cht = type: qr chl = Content","title":"Parameters"},{"location":"api/generating_qrcode/#sample","text":"","title":"Sample"},{"location":"architecture/_bookmarks/","tags":["architecture"],"text":"Design Patterns How to Build Modern Clean Architecture 7 Modern Microservice Design Patterns Hexagonal architecture and DDD Architecture Notes Become a DevOps Engineer in 2023 Hosting and Cloud Providers Coolify Fly.io","title":"Architecture bookmarks"},{"location":"architecture/_bookmarks/#hosting-and-cloud-providers","text":"Coolify Fly.io","title":"Hosting and Cloud Providers"},{"location":"bash/command_and_aliases/","tags":["bash","shell"],"text":"Commands and aliases for shell Listing local IPs Bash alias ips = 'ip -c -br a' Bash \u2726 \u276f ips lo UNKNOWN 127 .0.0.1/8 ::1/128 enp1s0 UP 192 .168.88.72/24 fe80::14:f207:b13:562f/64 wlp2s0 UP 192 .168.88.21/24 fe80::356b:b5b5:1fae:4a22/64 br-aa643bd30424 DOWN 172 .19.0.1/16 br-5b8d6bec92cf DOWN 172 .22.0.1/16 br-91c18c436867 DOWN 172 .20.0.1/16 br-98b6cfd1fb53 DOWN 172 .23.0.1/16 br-d26beecfc65c DOWN 172 .24.0.1/16 br-e0165e66c384 DOWN 172 .25.0.1/16 br-fbbdabe1e428 DOWN 172 .18.0.1/16 docker0 DOWN 172 .17.0.1/16 br-58d103d2fc5a DOWN 172 .21.0.1/16 br-981cb645b58a UP 172 .26.0.1/16 fe80::42:89ff:fe6b:bc92/64 vethcd4aaa2@if19 UP fe80::4845:40ff:fe18:865c/64 vpn UNKNOWN 10 .186.112.113/32 fe80::fe07:f1d8:daf6:bd47/64 Listing open ports Bash alias ports = 'sudo netstat -tulanp' Bash \u2726 \u276f ports Conex\u00f5es Internet Ativas ( servidores e estabelecidas ) Proto Recv-Q Send-Q Endere\u00e7o Local Endere\u00e7o Remoto Estado PID/Program name tcp 0 0 0 .0.0.0:27017 0 .0.0.0:* OU\u00c7A 922978 /docker-proxy tcp 0 0 127 .0.0.53:53 0 .0.0.0:* OU\u00c7A 1229870 /systemd-res tcp 0 0 127 .0.0.1:8000 0 .0.0.0:* OU\u00c7A 1229353 /python3.11 tcp 0 0 127 .0.0.1:39451 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:39485 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 0 .0.0.0:22 0 .0.0.0:* OU\u00c7A 1007 /sshd: /usr/sbi tcp 0 0 0 .0.0.0:111 0 .0.0.0:* OU\u00c7A 1 /init tcp 0 0 127 .0.0.1:46727 0 .0.0.0:* OU\u00c7A 894 /confighandler tcp 0 0 127 .0.0.1:46595 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:37085 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:37545 0 .0.0.0:* OU\u00c7A 925 /containerd tcp 0 0 127 .0.0.1:52783 0 .0.0.0:* OU\u00c7A 6087 /kbfsfuse tcp 0 0 127 .0.0.1:44959 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:17915 0 .0.0.0:* OU\u00c7A 5995 /keybase tcp 0 0 127 .0.0.1:25 0 .0.0.0:* OU\u00c7A 3069 /master tcp 0 0 127 .0.0.1:33117 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:41653 0 .0.0.0:* OU\u00c7A 1225749 /Code --stan tcp 0 0 127 .0.0.1:631 0 .0.0.0:* OU\u00c7A 473882 /cupsd tcp 0 0 192 .168.88.72:35030 104 .18.29.31:443 ESTABELECIDA 38367 /chrome --type tcp 0 0 192 .168.88.72:35076 52 .113.207.5:443 ESTABELECIDA 6478 /teams --type = u tcp 0 0 192 .168.88.72:34128 157 .240.226.60:443 ESTABELECIDA 38367 /chrome --type tcp 0 0 192 .168.88.72:52924 54 .205.255.92:443 ESTABELECIDA 6087 /kbfsfuse tcp 0 0 127 .0.0.1:27017 127 .0.0.1:55954 ESTABELECIDA 922978 /docker-proxy tcp 0 0 10 .186.112.113:60616 172 .22.181.9:443 ESTABELECIDA 13601 /firefox tcp 0 0 192 .168.88.72:51870 45 .60.38.211:443 ESTABELECIDA 38367 /chrome --type tcp 0 0 127 .0.0.1:33117 127 .0.0.1:42350 ESTABELECIDA 867801 /Rider.Backen Searching commands in history Bash alias gh = 'history|grep' call gh with the grep expression you are searching for. Bash \u276f gh sudo 106 sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69 107 echo \"deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main\" | sudo tee /etc/apt/sources.list.d/k6.list 108 sudo apt update 109 sudo apt install k6 210 sudo cat /proc/931/mem 211 sudo cat /proc/931/cmdline 506 sudo dpkg -i libssl1.1_1.1.1n-0+deb11u3_amd64.deb 736 sudo ./hd_health.sh Disk usage Bash sudo apt install duf Bash \u2726 \u276f duf \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 3 local devices \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 MOUNTED ON \u2502 SIZE \u2502 USED \u2502 AVAIL \u2502 USE% \u2502 TYPE \u2502 FILESYSTEM \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 / \u2502 204 .0G \u2502 81 .1G \u2502 112 .4G \u2502 [ #######.............] 39.8% \u2502 ext4 \u2502 /dev/sda1 \u2502 \u2502 /boot/efi \u2502 96 .0M \u2502 44 .9M \u2502 51 .1M \u2502 [ #########...........] 46.8% \u2502 vfat \u2502 /dev/sdb2 \u2502 \u2502 /var/snap/firefox/common/ \u2502 204 .0G \u2502 81 .1G \u2502 112 .4G \u2502 [ #######.............] 39.8% \u2502 ext4 \u2502 /dev/sda1 \u2502 \u2502 host-hunspell \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 1 fuse device \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 MOUNTED ON \u2502 SIZE \u2502 USED \u2502 AVAIL \u2502 USE% \u2502 TYPE \u2502 FILESYSTEM \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 /run/user/1000/keybase/kb \u2502 250 .0G \u2502 1 .6G \u2502 248 .4G \u2502 [ .................... ] 0 .6% \u2502 fuse \u2502 /dev/fuse \u2502 \u2502 fs \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 6 special devices \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 MOUNTED ON \u2502 SIZE \u2502 USED \u2502 AVAIL \u2502 USE% \u2502 TYPE \u2502 FILESYSTEM \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 /dev \u2502 7 .7G \u2502 0B \u2502 7 .7G \u2502 \u2502 devtmpfs \u2502 udev \u2502 \u2502 /dev/shm \u2502 7 .8G \u2502 637 .2M \u2502 7 .1G \u2502 [ #...................] 8.0% \u2502 tmpfs \u2502 tmpfs \u2502 \u2502 /run \u2502 1 .6G \u2502 2 .6M \u2502 1 .5G \u2502 [ .................... ] 0 .2% \u2502 tmpfs \u2502 tmpfs \u2502 \u2502 /run/lock \u2502 5 .0M \u2502 4 .0K \u2502 5 .0M \u2502 [ .................... ] 0 .1% \u2502 tmpfs \u2502 tmpfs \u2502 \u2502 /run/snapd/ns \u2502 1 .6G \u2502 2 .6M \u2502 1 .5G \u2502 [ .................... ] 0 .2% \u2502 tmpfs \u2502 tmpfs \u2502 \u2502 /run/user/1000 \u2502 1 .6G \u2502 236 .0K \u2502 1 .6G \u2502 [ .................... ] 0 .0% \u2502 tmpfs \u2502 tmpfs \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f DNS informations Old command: dnslookup Bash dig google.com Bash \u2726 \u276f dig google.com ; <<>> DiG 9 .18.1-1ubuntu1.3-Ubuntu <<>> google.com ;; global options: +cmd ;; Got answer: ;; ->>HEADER <<- opco de: QUERY, status: NOERROR, id: 61639 ;; flags: qr rd ra ; QUERY: 1 , ANSWER: 1 , AUTHORITY: 0 , ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0 , flags: ; udp: 65494 ;; QUESTION SECTION: ; google.com. IN A ;; ANSWER SECTION: google.com. 211 IN A 142 .250.79.206 ;; Query time: 7 msec ;; SERVER: 127 .0.0.53#53 ( 127 .0.0.53 ) ( UDP ) ;; WHEN: Wed Feb 01 18 :53:52 -03 2023 ;; MSG SIZE rcvd: 55 Finding files Old command: find Bash sudo apt install fd-find Bash \u2726 \u276f fdfind pdf FORBE CAPITAL ( 1 ) .pdf QuebraCabeca.pdf ManualTecnico.pdf RabbitMQ-2023-JAN-26.pdf Process monitoring Old command: top, htop, etc Bash sudo apt install bashtop Seu Terminal Linux n\u00e3o ser\u00e1 mais o mesmo depois disso! - Shell ALIAS no Linux Os comandos que VOC\u00ca USA est\u00e3o OBSOLETOS! 10 alternativas mais eficientes para o terminal Linux","title":"Commands and Aliases"},{"location":"bash/command_and_aliases/#commands-and-aliases-for-shell","text":"","title":"Commands and aliases for shell"},{"location":"bash/command_and_aliases/#listing-local-ips","text":"Bash alias ips = 'ip -c -br a' Bash \u2726 \u276f ips lo UNKNOWN 127 .0.0.1/8 ::1/128 enp1s0 UP 192 .168.88.72/24 fe80::14:f207:b13:562f/64 wlp2s0 UP 192 .168.88.21/24 fe80::356b:b5b5:1fae:4a22/64 br-aa643bd30424 DOWN 172 .19.0.1/16 br-5b8d6bec92cf DOWN 172 .22.0.1/16 br-91c18c436867 DOWN 172 .20.0.1/16 br-98b6cfd1fb53 DOWN 172 .23.0.1/16 br-d26beecfc65c DOWN 172 .24.0.1/16 br-e0165e66c384 DOWN 172 .25.0.1/16 br-fbbdabe1e428 DOWN 172 .18.0.1/16 docker0 DOWN 172 .17.0.1/16 br-58d103d2fc5a DOWN 172 .21.0.1/16 br-981cb645b58a UP 172 .26.0.1/16 fe80::42:89ff:fe6b:bc92/64 vethcd4aaa2@if19 UP fe80::4845:40ff:fe18:865c/64 vpn UNKNOWN 10 .186.112.113/32 fe80::fe07:f1d8:daf6:bd47/64","title":"Listing local IPs"},{"location":"bash/command_and_aliases/#listing-open-ports","text":"Bash alias ports = 'sudo netstat -tulanp' Bash \u2726 \u276f ports Conex\u00f5es Internet Ativas ( servidores e estabelecidas ) Proto Recv-Q Send-Q Endere\u00e7o Local Endere\u00e7o Remoto Estado PID/Program name tcp 0 0 0 .0.0.0:27017 0 .0.0.0:* OU\u00c7A 922978 /docker-proxy tcp 0 0 127 .0.0.53:53 0 .0.0.0:* OU\u00c7A 1229870 /systemd-res tcp 0 0 127 .0.0.1:8000 0 .0.0.0:* OU\u00c7A 1229353 /python3.11 tcp 0 0 127 .0.0.1:39451 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:39485 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 0 .0.0.0:22 0 .0.0.0:* OU\u00c7A 1007 /sshd: /usr/sbi tcp 0 0 0 .0.0.0:111 0 .0.0.0:* OU\u00c7A 1 /init tcp 0 0 127 .0.0.1:46727 0 .0.0.0:* OU\u00c7A 894 /confighandler tcp 0 0 127 .0.0.1:46595 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:37085 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:37545 0 .0.0.0:* OU\u00c7A 925 /containerd tcp 0 0 127 .0.0.1:52783 0 .0.0.0:* OU\u00c7A 6087 /kbfsfuse tcp 0 0 127 .0.0.1:44959 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:17915 0 .0.0.0:* OU\u00c7A 5995 /keybase tcp 0 0 127 .0.0.1:25 0 .0.0.0:* OU\u00c7A 3069 /master tcp 0 0 127 .0.0.1:33117 0 .0.0.0:* OU\u00c7A 867801 /Rider.Backen tcp 0 0 127 .0.0.1:41653 0 .0.0.0:* OU\u00c7A 1225749 /Code --stan tcp 0 0 127 .0.0.1:631 0 .0.0.0:* OU\u00c7A 473882 /cupsd tcp 0 0 192 .168.88.72:35030 104 .18.29.31:443 ESTABELECIDA 38367 /chrome --type tcp 0 0 192 .168.88.72:35076 52 .113.207.5:443 ESTABELECIDA 6478 /teams --type = u tcp 0 0 192 .168.88.72:34128 157 .240.226.60:443 ESTABELECIDA 38367 /chrome --type tcp 0 0 192 .168.88.72:52924 54 .205.255.92:443 ESTABELECIDA 6087 /kbfsfuse tcp 0 0 127 .0.0.1:27017 127 .0.0.1:55954 ESTABELECIDA 922978 /docker-proxy tcp 0 0 10 .186.112.113:60616 172 .22.181.9:443 ESTABELECIDA 13601 /firefox tcp 0 0 192 .168.88.72:51870 45 .60.38.211:443 ESTABELECIDA 38367 /chrome --type tcp 0 0 127 .0.0.1:33117 127 .0.0.1:42350 ESTABELECIDA 867801 /Rider.Backen","title":"Listing open ports"},{"location":"bash/command_and_aliases/#searching-commands-in-history","text":"Bash alias gh = 'history|grep' call gh with the grep expression you are searching for. Bash \u276f gh sudo 106 sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69 107 echo \"deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main\" | sudo tee /etc/apt/sources.list.d/k6.list 108 sudo apt update 109 sudo apt install k6 210 sudo cat /proc/931/mem 211 sudo cat /proc/931/cmdline 506 sudo dpkg -i libssl1.1_1.1.1n-0+deb11u3_amd64.deb 736 sudo ./hd_health.sh","title":"Searching commands in history"},{"location":"bash/command_and_aliases/#disk-usage","text":"Bash sudo apt install duf Bash \u2726 \u276f duf \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 3 local devices \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 MOUNTED ON \u2502 SIZE \u2502 USED \u2502 AVAIL \u2502 USE% \u2502 TYPE \u2502 FILESYSTEM \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 / \u2502 204 .0G \u2502 81 .1G \u2502 112 .4G \u2502 [ #######.............] 39.8% \u2502 ext4 \u2502 /dev/sda1 \u2502 \u2502 /boot/efi \u2502 96 .0M \u2502 44 .9M \u2502 51 .1M \u2502 [ #########...........] 46.8% \u2502 vfat \u2502 /dev/sdb2 \u2502 \u2502 /var/snap/firefox/common/ \u2502 204 .0G \u2502 81 .1G \u2502 112 .4G \u2502 [ #######.............] 39.8% \u2502 ext4 \u2502 /dev/sda1 \u2502 \u2502 host-hunspell \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 1 fuse device \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 MOUNTED ON \u2502 SIZE \u2502 USED \u2502 AVAIL \u2502 USE% \u2502 TYPE \u2502 FILESYSTEM \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 /run/user/1000/keybase/kb \u2502 250 .0G \u2502 1 .6G \u2502 248 .4G \u2502 [ .................... ] 0 .6% \u2502 fuse \u2502 /dev/fuse \u2502 \u2502 fs \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502 6 special devices \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 MOUNTED ON \u2502 SIZE \u2502 USED \u2502 AVAIL \u2502 USE% \u2502 TYPE \u2502 FILESYSTEM \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 /dev \u2502 7 .7G \u2502 0B \u2502 7 .7G \u2502 \u2502 devtmpfs \u2502 udev \u2502 \u2502 /dev/shm \u2502 7 .8G \u2502 637 .2M \u2502 7 .1G \u2502 [ #...................] 8.0% \u2502 tmpfs \u2502 tmpfs \u2502 \u2502 /run \u2502 1 .6G \u2502 2 .6M \u2502 1 .5G \u2502 [ .................... ] 0 .2% \u2502 tmpfs \u2502 tmpfs \u2502 \u2502 /run/lock \u2502 5 .0M \u2502 4 .0K \u2502 5 .0M \u2502 [ .................... ] 0 .1% \u2502 tmpfs \u2502 tmpfs \u2502 \u2502 /run/snapd/ns \u2502 1 .6G \u2502 2 .6M \u2502 1 .5G \u2502 [ .................... ] 0 .2% \u2502 tmpfs \u2502 tmpfs \u2502 \u2502 /run/user/1000 \u2502 1 .6G \u2502 236 .0K \u2502 1 .6G \u2502 [ .................... ] 0 .0% \u2502 tmpfs \u2502 tmpfs \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f","title":"Disk usage"},{"location":"bash/command_and_aliases/#dns-informations","text":"Old command: dnslookup Bash dig google.com Bash \u2726 \u276f dig google.com ; <<>> DiG 9 .18.1-1ubuntu1.3-Ubuntu <<>> google.com ;; global options: +cmd ;; Got answer: ;; ->>HEADER <<- opco de: QUERY, status: NOERROR, id: 61639 ;; flags: qr rd ra ; QUERY: 1 , ANSWER: 1 , AUTHORITY: 0 , ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0 , flags: ; udp: 65494 ;; QUESTION SECTION: ; google.com. IN A ;; ANSWER SECTION: google.com. 211 IN A 142 .250.79.206 ;; Query time: 7 msec ;; SERVER: 127 .0.0.53#53 ( 127 .0.0.53 ) ( UDP ) ;; WHEN: Wed Feb 01 18 :53:52 -03 2023 ;; MSG SIZE rcvd: 55","title":"DNS informations"},{"location":"bash/command_and_aliases/#finding-files","text":"Old command: find Bash sudo apt install fd-find Bash \u2726 \u276f fdfind pdf FORBE CAPITAL ( 1 ) .pdf QuebraCabeca.pdf ManualTecnico.pdf RabbitMQ-2023-JAN-26.pdf","title":"Finding files"},{"location":"bash/command_and_aliases/#process-monitoring","text":"Old command: top, htop, etc Bash sudo apt install bashtop Seu Terminal Linux n\u00e3o ser\u00e1 mais o mesmo depois disso! - Shell ALIAS no Linux Os comandos que VOC\u00ca USA est\u00e3o OBSOLETOS! 10 alternativas mais eficientes para o terminal Linux","title":"Process monitoring"},{"location":"c_sharp/_bookmarks/","tags":["csharp"],"text":"Nick Chapsas channel The weirdest way to loop in C# is also the fastest Why you no longer need a Dockerfile in .NET 7 What's New in .NET 7 for Authentication and Authorization Microsoft Community Toolkit","title":"C# bookmarks"},{"location":"c_sharp/cron_clean_all_projects/","tags":["cron","csharp","dotnet","bash"],"text":"My codebase is backuped every 6 hours. Some projects aren't touched by weeks, and the build files, binaries and objects are useless to backup. So I created a script to run every week, cleaning the projects and reducing the data sent to backup. clean_csharp_all.sh Bash #!/bin/bash # Script to clean all C# projects in a folder no_clean = 0 clean = 0 bytes_saved = 0 do_clean () { echo \"Cleaning $1 \" folder = $( dirname \" $1 \" ) folder_size_before = $( du -b -c \" $folder \" | tail -n 1 | awk '{print $1;}' ) cd $folder dotnet clean folder_size_after = $( du -b -c \" $folder \" | tail -n 1 | awk '{print $1;}' ) if [ $folder_size_after -eq $folder_size_before ] ; then (( no_clean++ )) else echo \"Folder size before: $folder_size_before -> after: $folder_size_after \" (( clean++ )) bytes_saved = $(( bytes_saved + $folder_size_before - $folder_size_after )) fi } # This command searches for all solution files in my $HOME/dev folder for s in $( find ~/dev -type f -name \"*.sln\" ) ; do do_clean \" $s \" ; done echo \"Cleaned $clean projects, $no_clean projects were already clean\" echo \"Bytes saved: $bytes_saved \" crontab Bash # Runs the clean dotnet projects every monday @ 23:50 50 23 * * 1 /home/guionardo/dev/scripts/clean_csharp_all.sh","title":"Cronjob to clean all dotnet projects"},{"location":"c_sharp/cron_clean_all_projects/#clean_csharp_allsh","text":"Bash #!/bin/bash # Script to clean all C# projects in a folder no_clean = 0 clean = 0 bytes_saved = 0 do_clean () { echo \"Cleaning $1 \" folder = $( dirname \" $1 \" ) folder_size_before = $( du -b -c \" $folder \" | tail -n 1 | awk '{print $1;}' ) cd $folder dotnet clean folder_size_after = $( du -b -c \" $folder \" | tail -n 1 | awk '{print $1;}' ) if [ $folder_size_after -eq $folder_size_before ] ; then (( no_clean++ )) else echo \"Folder size before: $folder_size_before -> after: $folder_size_after \" (( clean++ )) bytes_saved = $(( bytes_saved + $folder_size_before - $folder_size_after )) fi } # This command searches for all solution files in my $HOME/dev folder for s in $( find ~/dev -type f -name \"*.sln\" ) ; do do_clean \" $s \" ; done echo \"Cleaned $clean projects, $no_clean projects were already clean\" echo \"Bytes saved: $bytes_saved \"","title":"clean_csharp_all.sh"},{"location":"c_sharp/cron_clean_all_projects/#crontab","text":"Bash # Runs the clean dotnet projects every monday @ 23:50 50 23 * * 1 /home/guionardo/dev/scripts/clean_csharp_all.sh","title":"crontab"},{"location":"c_sharp/installing_dotnet_on_ubuntu/","tags":["csharp","setup","dotnet"],"text":"A fatal error occurred. The folder [/usr/share/dotnet/host/fxr] does not exist When .NET (Core) was first released for Linux, it was not yet available in the official Ubuntu repo. So instead, many of us added the Microsoft APT repo in order to install it. Now, the packages are part of the Ubuntu repo, and they are conflicting with the Microsoft packages. This error is a result of mixed packages. So you need to pick which one you're going to use, and ensure they don't mix. Personally, I decided to stick with the Microsoft packages because I figured they'll be better kept up-to-date. First, remove all existing packages to get to a clean state: Bash sudo apt remove dotnet* sudo apt remove aspnetcore* sudo apt remove netstandard* Then, create a file in /etc/apt/preferences.d (I named mine 99microsoft-dotnet.pref, following the convention that files in such *.d directories are typically prefixed with a 2-digit number so that they sort and load in a predictable order) with the following contents: Text Only Package: * Pin: origin \"packages.microsoft.com\" Pin-Priority: 1001 Then, the regular update & install: Bash sudo apt update sudo apt install dotnet-sdk-6.0 If you would rather use the official Ubuntu packages, remove all the existing packages as above, but instead of creating the /etc/apt/preferences.d entry, just delete the Microsoft repo: Bash sudo rm /etc/apt/sources.list.d/microsoft-prod.list sudo apt update sudo apt install dotnet-sdk-6.0 However, note that the Microsoft repo contains other packages such as PowerShell, SQL Server Command-Line Tools, etc., so removing it may not be desirable. I'm sure it's possible to make the APT config more specific to just these packages, but this is working for me for now. Hopefully Microsoft and Ubuntu work together to fix this soon. More info on the issue and various solutions is available here: Microsoft Linux Package Mixup GitHub Dotnet core issue 7699 Original post","title":"Fixing DotNet on Ubuntu"},{"location":"c_sharp/installing_dotnet_on_ubuntu/#a-fatal-error-occurred-the-folder-usrsharedotnethostfxr-does-not-exist","text":"When .NET (Core) was first released for Linux, it was not yet available in the official Ubuntu repo. So instead, many of us added the Microsoft APT repo in order to install it. Now, the packages are part of the Ubuntu repo, and they are conflicting with the Microsoft packages. This error is a result of mixed packages. So you need to pick which one you're going to use, and ensure they don't mix. Personally, I decided to stick with the Microsoft packages because I figured they'll be better kept up-to-date. First, remove all existing packages to get to a clean state: Bash sudo apt remove dotnet* sudo apt remove aspnetcore* sudo apt remove netstandard* Then, create a file in /etc/apt/preferences.d (I named mine 99microsoft-dotnet.pref, following the convention that files in such *.d directories are typically prefixed with a 2-digit number so that they sort and load in a predictable order) with the following contents: Text Only Package: * Pin: origin \"packages.microsoft.com\" Pin-Priority: 1001 Then, the regular update & install: Bash sudo apt update sudo apt install dotnet-sdk-6.0 If you would rather use the official Ubuntu packages, remove all the existing packages as above, but instead of creating the /etc/apt/preferences.d entry, just delete the Microsoft repo: Bash sudo rm /etc/apt/sources.list.d/microsoft-prod.list sudo apt update sudo apt install dotnet-sdk-6.0 However, note that the Microsoft repo contains other packages such as PowerShell, SQL Server Command-Line Tools, etc., so removing it may not be desirable. I'm sure it's possible to make the APT config more specific to just these packages, but this is working for me for now. Hopefully Microsoft and Ubuntu work together to fix this soon. More info on the issue and various solutions is available here: Microsoft Linux Package Mixup GitHub Dotnet core issue 7699 Original post","title":"A fatal error occurred. The folder [/usr/share/dotnet/host/fxr] does not exist"},{"location":"c_sharp/validacao_cpf_cnpj/","tags":["c_sharp","cpf","cnpj"],"text":"C# public static class ValidateDocument { /// /// Validates CPF/CNPJ and reformats any missing left padding '0' /// public static bool FormatIfValidDocument ( string document , out string formattedAccount ) { document = string . Join ( \"\" , document . Where ( c => c is >= '0' and <= '9' ) . Select ( c => c )); if ( IsValidCpf ( document ) || IsValidCnpj ( document )) { formattedAccount = document ; return true ; } // Try CPF var cpfDoc = document . PadLeft ( 11 , '0' ); if ( IsValidCpf ( cpfDoc )) { formattedAccount = cpfDoc ; return true ; } // Try CNPJ var cnpjDoc = document . PadLeft ( 14 , '0' ); if ( IsValidCnpj ( cnpjDoc )) { formattedAccount = cnpjDoc ; return true ; } formattedAccount = \"\" ; return false ; } private static readonly byte [] CpfMult1 = { 10 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 }; private static readonly byte [] CpfMult2 = { 11 , 10 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 }; private static readonly byte [] CnpjMult1 = { 5 , 4 , 3 , 2 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 }; private static readonly byte [] CnpjMult2 = { 6 , 5 , 4 , 3 , 2 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 }; private static bool IsValidCpf ( string cpf ) => IsValidNumber ( cpf , CpfMult1 , CpfMult2 ); private static bool IsValidCnpj ( string cnpj ) => IsValidNumber ( cnpj , CnpjMult1 , CnpjMult2 ); private static bool IsValidNumber ( string doc , IReadOnlyCollection < byte > mult1 , IReadOnlyCollection < byte > mult2 ) { byte GetModule11 ( IReadOnlyList < byte > data , IEnumerable < byte > mult ) { var sum = mult . Select (( t , i ) => data [ i ] * t ). Sum (); var rest = sum % 11 ; return ( byte )( rest < 2 ? 0 : ( 11 - rest )); } var size = mult2 . Count + 1 ; if ( doc . Length != size || doc . All ( c => c == doc [ 0 ])) // Test if length is OK and all numbers are not equal return false ; var digits = doc . Select ( d => ( byte )( d - '0' )). ToArray (); var rest1 = GetModule11 ( digits , mult1 ); var updatedDigits = digits [.. mult1 . Count ]. Append ( rest1 ). ToArray (); var rest2 = GetModule11 ( updatedDigits , mult2 ); return doc . EndsWith ( $\"{rest1}{rest2}\" ); } }","title":"Valida\u00e7\u00e3o de CPF e CNPJ"},{"location":"docker/databases_portainer/","tags":["docker","docker-compose","portainer","database","mongodb","postgresql"],"text":"Running databases as a Portainer stack. YAML version : \"2\" services : mongodb : image : mongo:4.4.19-focal environment : PUID : 1000 PGID : 1000 MONGO_DATA_DIR : /data/db volumes : - mongodb_data:/data/db ports : - 27017:27017 restart : unless-stopped network_mode : host postgres : image : postgres environment : POSTGRES_PASSWORD : postgres POSTGRES_USER : secret ports : - 5432:5432 volumes : - postgres_data:/var/lib/postgresql restart : unless-stopped network_mode : host volumes : mongodb_data : postgres_data :","title":"MongoDB and PostgreSQL in portainer stack"},{"location":"docker/mongodb/","tags":["docker","docker-compose","mongodb"],"text":"No auth docker-compose.yaml version : '3.1' services : mongo : image : mongo environment : MONGO_DATA_DIR : /data/db MONGO_LOG_DIR : /dev/null ports : - \"27017:27017\"","title":"MongoDB docker-compose"},{"location":"docker/postgres/","tags":["docker","docker-compose","postgresql"],"text":"User: postgres Password: postgres Database persistence into local folder /home/guionardo/dev/docker/volumes/postgres docker-compose.yaml version : \"3\" services : postgres : image : postgres environment : - POSTGRES_PASSWORD=postgres - POSTGRES_USER=postgres ports : - 5432:5432 volumes : - /home/guionardo/dev/docker/volumes/postgres:/var/lib/postgresql","title":"PostgreSQL docker-compose"},{"location":"free_pascal/shared_dll/","tags":["fpc","dll","vfp"],"text":"Exemplo de biblioteca compartilhada em FPC ( reposit\u00f3rio ) Passei um tempo me debatendo com um problema, onde eu precisava de uma DLL com c\u00f3digo (relativamente) protegido que seria utilizada em outras aplica\u00e7\u00f5es. Basicamente, a DLL \u00e9 desenvolvida em Freepascal e seus m\u00e9todos ser\u00e3o usados em aplica\u00e7\u00f5es em Visual Fox Pro e C# . Inicialmente, encontrei algumas informa\u00e7\u00f5es aqui: http://wiki.freepascal.org/shared_library http://wiki.freepascal.org/Using_Pascal_Libraries_with_.NET_and_Mono E por fim, depois de alguns testes, cheguei a um c\u00f3digo base que pode ser aplicado com seguran\u00e7a: \u00c9 importante frisar o uso dos tipos nativos do VFP e do C#, para encontrar a equival\u00eancia no FPC. Tipos Inteiros No VFP, os inteiros dispon\u00edveis s\u00e3o Short e Integer. Portanto, verifique a equival\u00eancia no FPC (Int16/Int32) Reais No VFP, os reais dispon\u00edveis s\u00e3o Single e Double. Boolean No VFP, os Boolean s\u00e3o tratados como n\u00fameros, e podem causar problemas. Ao implementar sua rotina em FPC que trata um valor booleano, converta-o para inteiro e use o padr\u00e3o 0=Falso / 1=Verdadeiro ao passar/receber o valor para o VFP. String Aqui, a pegadinha fica por conta do C#. O tipo de dado usado para as strings no FPC \u00e9 o PAnsiString, que \u00e9 um ponteiro. Este ponteiro refere a uma \u00e1rea de mem\u00f3ria alocada pela aplica\u00e7\u00e3o e n\u00e3o pela DLL. Se o valor ser\u00e1 alterado, isto \u00e9, a vari\u00e1vel for passada por refer\u00eancia, deve-se incluir o atributo Marshal para o par\u00e2metro de refer\u00eancia (vide o exemplo em C#). Se apenas o par\u00e2metro for inputado a fun\u00e7\u00e3o da DLL sem refer\u00eancia, basta declar\u00e1-lo como string. Importante: Um string passado por refer\u00eancia deve ter seu conte\u00fado previamente criado e a fun\u00e7\u00e3o na DLL deve checar o seu tamanho para evitar SIGSEGV e estourar uma exce\u00e7\u00e3o que vai trazer uma mensagem gen\u00e9rica e fazer voc\u00ea quebrar a cabe\u00e7a at\u00e9 achar onde deixou cair as cal\u00e7as.","title":"Free Pascal Shared DLL"},{"location":"free_pascal/shared_dll/#tipos","text":"","title":"Tipos"},{"location":"free_pascal/shared_dll/#inteiros","text":"No VFP, os inteiros dispon\u00edveis s\u00e3o Short e Integer. Portanto, verifique a equival\u00eancia no FPC (Int16/Int32)","title":"Inteiros"},{"location":"free_pascal/shared_dll/#reais","text":"No VFP, os reais dispon\u00edveis s\u00e3o Single e Double.","title":"Reais"},{"location":"free_pascal/shared_dll/#boolean","text":"No VFP, os Boolean s\u00e3o tratados como n\u00fameros, e podem causar problemas. Ao implementar sua rotina em FPC que trata um valor booleano, converta-o para inteiro e use o padr\u00e3o 0=Falso / 1=Verdadeiro ao passar/receber o valor para o VFP.","title":"Boolean"},{"location":"free_pascal/shared_dll/#string","text":"Aqui, a pegadinha fica por conta do C#. O tipo de dado usado para as strings no FPC \u00e9 o PAnsiString, que \u00e9 um ponteiro. Este ponteiro refere a uma \u00e1rea de mem\u00f3ria alocada pela aplica\u00e7\u00e3o e n\u00e3o pela DLL. Se o valor ser\u00e1 alterado, isto \u00e9, a vari\u00e1vel for passada por refer\u00eancia, deve-se incluir o atributo Marshal para o par\u00e2metro de refer\u00eancia (vide o exemplo em C#). Se apenas o par\u00e2metro for inputado a fun\u00e7\u00e3o da DLL sem refer\u00eancia, basta declar\u00e1-lo como string. Importante: Um string passado por refer\u00eancia deve ter seu conte\u00fado previamente criado e a fun\u00e7\u00e3o na DLL deve checar o seu tamanho para evitar SIGSEGV e estourar uma exce\u00e7\u00e3o que vai trazer uma mensagem gen\u00e9rica e fazer voc\u00ea quebrar a cabe\u00e7a at\u00e9 achar onde deixou cair as cal\u00e7as.","title":"String"},{"location":"git/_bookmarks/","text":"View last change of a file in git without knowing the hash","title":"Git bookmarks"},{"location":"golang/_bookmarks/","tags":["golang"],"text":"Effective Go Hitchhhiker's Guide to Golang (not ready) Aprenda Golang (youtube series) The Go libraries that never failed us: 22 libraries you need to know","title":"Golang bookmarks"},{"location":"golang/detecting_filesystem_events/","tags":["golang","notification","file system"],"text":"Warning Needs testing/refactoring! Last time, this failed to work! Go package main import ( \"fmt\" \"github.com/fsnotify/fsnotify\" ) // main func main () { // creates a new file watcher watcher , err := fsnotify . NewWatcher () if err != nil { fmt . Println ( \"ERROR\" , err ) } defer watcher . Close () // done := make ( chan bool ) // go func () { for { select { // watch for events case event := <- watcher . Events : fmt . Printf ( \"EVENT! %#v\\n\" , event ) // watch for errors case err := <- watcher . Errors : fmt . Println ( \"ERROR\" , err ) } } }() // out of the box fsnotify can watch a single file, or a single directory if err := watcher . Add ( \"/Users/skdomino/Desktop/test.html\" ); err != nil { fmt . Println ( \"ERROR\" , err ) } <- done }","title":"Detecting filesystem events"},{"location":"javascript/_bookmarks/","tags":["js"],"text":"VueUse","title":"JavaScript bookmarks"},{"location":"python/_bookmarks/","tags":["python"],"text":"Dunossauro Arjan channel Pynecone (Frontend, Backend, Hosting, pure python)","title":"Python bookmarks"},{"location":"python/caca_palavras/","tags":["python","jogo"],"text":"Fonte da imagem: The Word Search Motiva\u00e7\u00e3o Este desafio surgiu da necessidade de criar alguns jogos para crian\u00e7as, com palavras espec\u00edficas. Ao inv\u00e9s de sair \u00e0 ca\u00e7a de algum site que fa\u00e7a isso automaticamente, pensei em desenvolver eu mesmo a minha solu\u00e7\u00e3o. Este c\u00f3digo gera uma matriz de letras que pode ser utilizado para montar o ca\u00e7a-palavras. Atualmente, o c\u00f3digo posiciona as palavras horizontalmente (da esquerda para a direita) e verticalmente (de cima para baixo). C\u00f3digo Python \"\"\" Ca\u00e7a Palavras \"\"\" import itertools import random import string from typing import List class Tabuleiro : \"\"\"Tabuleiro de Ca\u00e7a-palavras \"\"\" def __init__ ( self , palavras : List [ str ], width : int = 0 , height : int = 0 ): \"\"\"Inicializa o tabuleiro com as palavras escolhidas. Largura e Altura s\u00e3o automaticamente detectadas\"\"\" self . palavras = [ p . upper () . strip () for p in palavras ] max_length = ( max (( len ( p ) for p in self . palavras )) + 6 if palavras else max ( width , height ) ) self . width = max ( max_length , width ) self . height = max ( max_length , height ) random . seed () random . shuffle ( self . palavras ) self . chars = [ ' ' ] * self . width * self . height horizontal = True for palavra in self . palavras : if self . _try_put_word ( palavra , horizontal ): horizontal = not horizontal else : self . _try_put_word ( palavra , not horizontal ) if self . palavras : self . _fill_empty_chars () def _can_put_word_at ( self , word : str , x : int , y : int , horizontal : bool ) -> bool : \"\"\"Verifica se uma palavra pode ser inserida na linha ou coluna em espa\u00e7os livres ou com caracteres compartilhados com outras palavras\"\"\" if ( horizontal and x + len ( word ) >= self . width ) or ( not horizontal and y + len ( word ) >= self . height ): return False for index , c in enumerate ( list ( word )): e = self . _get_char ( x + index , y ) if horizontal else self . _get_char ( x , y + index ) if e not in [ ' ' , c ]: return False return True def _try_put_word ( self , word : str , horizontal : bool ) -> bool : \"\"\"Tenta inserir uma palavra no tabuleiro, procurando por uma posi\u00e7\u00e3o dispon\u00edvel\"\"\" cols = list ( range ( self . width - len ( word ))) random . shuffle ( cols ) rows = list ( range ( self . height - len ( word ))) random . shuffle ( rows ) for col , row in itertools . product ( cols , rows ): if self . _can_put_word_at ( word , col , row , horizontal ): self . _put_word_at ( word , col , row , horizontal ) return True return False def _fill_empty_chars ( self ): \"\"\"Preenche os espa\u00e7os vazios com caracteres aleat\u00f3rios\"\"\" for index , c in enumerate ( self . chars ): if c == ' ' : self . chars [ index ] = random . choice ( string . ascii_uppercase ) def _put_word_at ( self , word : str , x : int , y : int , horizontal : bool ): \"\"\"Insere uma palavra na posi\u00e7\u00e3o informada\"\"\" for index , c in enumerate ( list ( word )): if horizontal : self . _set_char ( x + index , y , c ) else : self . _set_char ( x , y + index , c ) def _set_char ( self , x : int , y : int , c : str ): \"\"\"Define um caractere na tabela\"\"\" self . chars [ y * self . width + x ] = c [ 0 ] if c else ' ' def _get_char ( self , x : int , y : int ) -> str : \"\"\"Obt\u00e9m um caractere da tabela\"\"\" return self . chars [ y * self . width + x ] def _get_row ( self , y : int ) -> str : \"\"\"Obt\u00e9m uma linha da tabela\"\"\" return '' . join ([ self . _get_char ( x , y ) for x in range ( self . width )]) def __str__ ( self ) -> str : return ' \\n ' . join ([ self . _get_row ( y ) for y in range ( self . height )]) Uso Python from caca_palavra.tabuleiro import Tabuleiro tabuleiro = Tabuleiro ([ 'nome' , 'endere\u00e7o' , 'bairro' , 'cidade' , 'estado' , 'pa\u00eds' , 'casa' , 'camelo' , 'amarelo' , 'bacana' , 'guionardo' ], 20 , 20 ) print ( tabuleiro ) Sa\u00edda Text Only JUWYHAYNCYAEHERGDQDQ OVMKRJWGJBLAMARELOKT WJRPNXOFWLWTZCIDADEY ESTADOLMZGGVDBWESWQT ALORBACANATXOKBNLGMC JJWRDRPCWRPQLKJOOYNT DKFWCEFAMHOTAVXMOIYL PNNPFMEMDELWXABEYVYA MNPA\u00cdSTEPFAJGKYNHPRH TLRKMZNLKTGUIONARDOJ TXGYTWOOPFACAPYKYVJU YEKQCOHIDGERGCBVDLCZ LRKTTUUBYKNKAFTJGQSS EIAXTHRHBXDQNLJMXSGQ VXSPORCWACESHJVGEUTM WIAWYMKTIARWRSEQXONS RLGJVFITRSETDUWBSACL VVBTETWGRA\u00c7XEKHLQHIA ISVCQYZWOQOXXZUOHAIM UYIZVVXGKSISTUGAULON","title":"Gerador de ca\u00e7a-palavras"},{"location":"python/caca_palavras/#motivacao","text":"Este desafio surgiu da necessidade de criar alguns jogos para crian\u00e7as, com palavras espec\u00edficas. Ao inv\u00e9s de sair \u00e0 ca\u00e7a de algum site que fa\u00e7a isso automaticamente, pensei em desenvolver eu mesmo a minha solu\u00e7\u00e3o. Este c\u00f3digo gera uma matriz de letras que pode ser utilizado para montar o ca\u00e7a-palavras. Atualmente, o c\u00f3digo posiciona as palavras horizontalmente (da esquerda para a direita) e verticalmente (de cima para baixo).","title":"Motiva\u00e7\u00e3o"},{"location":"python/caca_palavras/#codigo","text":"Python \"\"\" Ca\u00e7a Palavras \"\"\" import itertools import random import string from typing import List class Tabuleiro : \"\"\"Tabuleiro de Ca\u00e7a-palavras \"\"\" def __init__ ( self , palavras : List [ str ], width : int = 0 , height : int = 0 ): \"\"\"Inicializa o tabuleiro com as palavras escolhidas. Largura e Altura s\u00e3o automaticamente detectadas\"\"\" self . palavras = [ p . upper () . strip () for p in palavras ] max_length = ( max (( len ( p ) for p in self . palavras )) + 6 if palavras else max ( width , height ) ) self . width = max ( max_length , width ) self . height = max ( max_length , height ) random . seed () random . shuffle ( self . palavras ) self . chars = [ ' ' ] * self . width * self . height horizontal = True for palavra in self . palavras : if self . _try_put_word ( palavra , horizontal ): horizontal = not horizontal else : self . _try_put_word ( palavra , not horizontal ) if self . palavras : self . _fill_empty_chars () def _can_put_word_at ( self , word : str , x : int , y : int , horizontal : bool ) -> bool : \"\"\"Verifica se uma palavra pode ser inserida na linha ou coluna em espa\u00e7os livres ou com caracteres compartilhados com outras palavras\"\"\" if ( horizontal and x + len ( word ) >= self . width ) or ( not horizontal and y + len ( word ) >= self . height ): return False for index , c in enumerate ( list ( word )): e = self . _get_char ( x + index , y ) if horizontal else self . _get_char ( x , y + index ) if e not in [ ' ' , c ]: return False return True def _try_put_word ( self , word : str , horizontal : bool ) -> bool : \"\"\"Tenta inserir uma palavra no tabuleiro, procurando por uma posi\u00e7\u00e3o dispon\u00edvel\"\"\" cols = list ( range ( self . width - len ( word ))) random . shuffle ( cols ) rows = list ( range ( self . height - len ( word ))) random . shuffle ( rows ) for col , row in itertools . product ( cols , rows ): if self . _can_put_word_at ( word , col , row , horizontal ): self . _put_word_at ( word , col , row , horizontal ) return True return False def _fill_empty_chars ( self ): \"\"\"Preenche os espa\u00e7os vazios com caracteres aleat\u00f3rios\"\"\" for index , c in enumerate ( self . chars ): if c == ' ' : self . chars [ index ] = random . choice ( string . ascii_uppercase ) def _put_word_at ( self , word : str , x : int , y : int , horizontal : bool ): \"\"\"Insere uma palavra na posi\u00e7\u00e3o informada\"\"\" for index , c in enumerate ( list ( word )): if horizontal : self . _set_char ( x + index , y , c ) else : self . _set_char ( x , y + index , c ) def _set_char ( self , x : int , y : int , c : str ): \"\"\"Define um caractere na tabela\"\"\" self . chars [ y * self . width + x ] = c [ 0 ] if c else ' ' def _get_char ( self , x : int , y : int ) -> str : \"\"\"Obt\u00e9m um caractere da tabela\"\"\" return self . chars [ y * self . width + x ] def _get_row ( self , y : int ) -> str : \"\"\"Obt\u00e9m uma linha da tabela\"\"\" return '' . join ([ self . _get_char ( x , y ) for x in range ( self . width )]) def __str__ ( self ) -> str : return ' \\n ' . join ([ self . _get_row ( y ) for y in range ( self . height )])","title":"C\u00f3digo"},{"location":"python/caca_palavras/#uso","text":"Python from caca_palavra.tabuleiro import Tabuleiro tabuleiro = Tabuleiro ([ 'nome' , 'endere\u00e7o' , 'bairro' , 'cidade' , 'estado' , 'pa\u00eds' , 'casa' , 'camelo' , 'amarelo' , 'bacana' , 'guionardo' ], 20 , 20 ) print ( tabuleiro )","title":"Uso"},{"location":"python/caca_palavras/#saida","text":"Text Only JUWYHAYNCYAEHERGDQDQ OVMKRJWGJBLAMARELOKT WJRPNXOFWLWTZCIDADEY ESTADOLMZGGVDBWESWQT ALORBACANATXOKBNLGMC JJWRDRPCWRPQLKJOOYNT DKFWCEFAMHOTAVXMOIYL PNNPFMEMDELWXABEYVYA MNPA\u00cdSTEPFAJGKYNHPRH TLRKMZNLKTGUIONARDOJ TXGYTWOOPFACAPYKYVJU YEKQCOHIDGERGCBVDLCZ LRKTTUUBYKNKAFTJGQSS EIAXTHRHBXDQNLJMXSGQ VXSPORCWACESHJVGEUTM WIAWYMKTIARWRSEQXONS RLGJVFITRSETDUWBSACL VVBTETWGRA\u00c7XEKHLQHIA ISVCQYZWOQOXXZUOHAIM UYIZVVXGKSISTUGAULON","title":"Sa\u00edda"},{"location":"python/fast_folder_iteration/","tags":["python","benchmark"],"text":"Fast folder iteration in python Post created at 2022-01-19 07:53 I have a problem to deal here. I need to iterate over a big tree of folders and files and run process over each file. In python, we have some options to deal to folders and files. glob iglob os.walk os.scandir pathlib.Path Running this benchmark, we can read some implementation details: glob Python import glob folder = 'some_folder/another_folder/**/*' for file in glob . glob ( folder , recursive = True ): print ( file ) Text Only some_folder/another_folder/f1/file1 some_folder/another_folder/f1/file1 some_folder/another_folder/f1/file2 Pros Easy to use, less code to write Easy to apply filters using masks (fnmatch based) Returns data as a list Cons Time to scan is the worst (more than 11x the quickest method) Data will be available only after all files/folders been scanned iglob Python import glob folder = 'some_folder/another_folder/**/*' for file in glob . iglob ( folder , recursive = True ): print ( file ) Text Only some_folder/another_folder/f1/file1 some_folder/another_folder/f1/file1 some_folder/another_folder/f1/file2 Pros Easy to use, like glob Same filtering Returns data as iterator, so you can have your data without need to wait all iteration ending. Cons Time to scan is a little better than glob (10x the quickest method) Time to first file could be mutch better os.walk Python import os folder = 'some_folder/another_folder/**/*' for root , _ , files in os . walk ( folder ): for file in files : print ( os . path . join ( root , file )) Pros Good performance. Second quickest method (less than 2x slower than the quickest) Time for the first file almost imediattely (better result of all) Explicit code in loops gives more visibility and control if you need validations or another nasty processes Cons More code needed, with nested loops. If you need to nest os.walk in another os.walk loop, some strange things can ocurr. But probably your code needs some refactoring. os.scandir Python import os from typing import Generator folder = 'some_folder/another_folder/**/*' def get_files ( folder : str ) -> Generator : with os . scandir ( folder ) as scan : for item in scan : if item . is_file (): yield item . path else : for subitem in get_files ( item . path ): yield subitem Pros Best performance of all Context based, assure resources are released after processing Less verbose than os.walk Easy to implement your custom business rules Cons A little more complex. No big deal. pathlib.Path.rglob Python import pathlib folder = 'some_folder/another_folder' for path in pathlib . Path ( folder ) . rglob ( '*' ): if path . is_file (): yield str ( path ) Pros Easy to implement your custom business rules Returns a iterator You can have your files soon and don't need to wait for all scan (7x more time than os.scandir) Cons Average time to scan (almost 8 times greater than os.scandir) Memory consumption is 4 times more than the other methods Some data from tests System Information System Release Version Machine Processor Linux 5.11.0-46-generic #51~20.04.1-Ubuntu SMP Fri Jan 7 06:51:40 UTC 2022 x86_64 x86_64 CPU Info Physical cores Total cores Max frequency Min frequency Current frequency 4 8 3400 400 1.892 CPU Usage Per Core 0 1 2 3 4 5 6 7 Total 15.6 16.5 10.4 14.1 15.2 14.4 15.2 12.4 14 Memory Information Total Available Used Percentage 15.51GB 4.77GB 9.56GB 69.2% SWAP Total Free Used Percentage 15.26GB 3.28GB 11.98GB 78.5% Text Only Creating sample files + Creating folder ./test_files + Creating files LEVELS=6 FOLDER_COUNT=6 FILE_COUNT_BY_FOLDER=20 + Created 933120 files in 0:02:08.928680 * Running iterators: GlobFolderIterator IGlobFolderIterator OSWalkFolderIterator ScanDirIterator PathLibFolderIterator MEMORY USAGE Iterator RSS VMS DATA IGlobFolderIterator 111280128 96468992 96468992 OSWalkFolderIterator 111280128 96468992 96468992 ScanDirIterator 111280128 96468992 96468992 GlobFolderIterator 117309440 102498304 120254464 PathLibFolderIterator 469721088 455081984 455081984 ELAPSED TIME Iterator Elapsed time X ScanDirIterator 0:00:01.317526 1 OSWalkFolderIterator 0:00:02.496639 1.9 PathLibFolderIterator 0:00:10.464794 7.9 IGlobFolderIterator 0:00:14.358165 10.9 GlobFolderIterator 0:00:15.308936 11.6 TIME FOR FIRST FILE Iterator Elapsed time X ScanDirIterator 0:00:00.000098 1 OSWalkFolderIterator 0:00:00.000247 2.5 PathLibFolderIterator 0:00:00.000690 7 IGlobFolderIterator 0:00:00.001135 11.6 GlobFolderIterator 0:00:07.831005 79908.2 You can check the source code for this here . Image from this wikipedia article .","title":"Fast folder iteration in python"},{"location":"python/fast_folder_iteration/#fast-folder-iteration-in-python","text":"Post created at 2022-01-19 07:53 I have a problem to deal here. I need to iterate over a big tree of folders and files and run process over each file. In python, we have some options to deal to folders and files. glob iglob os.walk os.scandir pathlib.Path Running this benchmark, we can read some implementation details:","title":"Fast folder iteration in python"},{"location":"python/fast_folder_iteration/#glob","text":"Python import glob folder = 'some_folder/another_folder/**/*' for file in glob . glob ( folder , recursive = True ): print ( file ) Text Only some_folder/another_folder/f1/file1 some_folder/another_folder/f1/file1 some_folder/another_folder/f1/file2","title":"glob"},{"location":"python/fast_folder_iteration/#pros","text":"Easy to use, less code to write Easy to apply filters using masks (fnmatch based) Returns data as a list","title":"Pros"},{"location":"python/fast_folder_iteration/#cons","text":"Time to scan is the worst (more than 11x the quickest method) Data will be available only after all files/folders been scanned","title":"Cons"},{"location":"python/fast_folder_iteration/#iglob","text":"Python import glob folder = 'some_folder/another_folder/**/*' for file in glob . iglob ( folder , recursive = True ): print ( file ) Text Only some_folder/another_folder/f1/file1 some_folder/another_folder/f1/file1 some_folder/another_folder/f1/file2","title":"iglob"},{"location":"python/fast_folder_iteration/#pros_1","text":"Easy to use, like glob Same filtering Returns data as iterator, so you can have your data without need to wait all iteration ending.","title":"Pros"},{"location":"python/fast_folder_iteration/#cons_1","text":"Time to scan is a little better than glob (10x the quickest method) Time to first file could be mutch better","title":"Cons"},{"location":"python/fast_folder_iteration/#oswalk","text":"Python import os folder = 'some_folder/another_folder/**/*' for root , _ , files in os . walk ( folder ): for file in files : print ( os . path . join ( root , file ))","title":"os.walk"},{"location":"python/fast_folder_iteration/#pros_2","text":"Good performance. Second quickest method (less than 2x slower than the quickest) Time for the first file almost imediattely (better result of all) Explicit code in loops gives more visibility and control if you need validations or another nasty processes","title":"Pros"},{"location":"python/fast_folder_iteration/#cons_2","text":"More code needed, with nested loops. If you need to nest os.walk in another os.walk loop, some strange things can ocurr. But probably your code needs some refactoring.","title":"Cons"},{"location":"python/fast_folder_iteration/#osscandir","text":"Python import os from typing import Generator folder = 'some_folder/another_folder/**/*' def get_files ( folder : str ) -> Generator : with os . scandir ( folder ) as scan : for item in scan : if item . is_file (): yield item . path else : for subitem in get_files ( item . path ): yield subitem","title":"os.scandir"},{"location":"python/fast_folder_iteration/#pros_3","text":"Best performance of all Context based, assure resources are released after processing Less verbose than os.walk Easy to implement your custom business rules","title":"Pros"},{"location":"python/fast_folder_iteration/#cons_3","text":"A little more complex. No big deal.","title":"Cons"},{"location":"python/fast_folder_iteration/#pathlibpathrglob","text":"Python import pathlib folder = 'some_folder/another_folder' for path in pathlib . Path ( folder ) . rglob ( '*' ): if path . is_file (): yield str ( path )","title":"pathlib.Path.rglob"},{"location":"python/fast_folder_iteration/#pros_4","text":"Easy to implement your custom business rules Returns a iterator You can have your files soon and don't need to wait for all scan (7x more time than os.scandir)","title":"Pros"},{"location":"python/fast_folder_iteration/#cons_4","text":"Average time to scan (almost 8 times greater than os.scandir) Memory consumption is 4 times more than the other methods","title":"Cons"},{"location":"python/fast_folder_iteration/#some-data-from-tests","text":"","title":"Some data from tests"},{"location":"python/fast_folder_iteration/#system-information","text":"System Release Version Machine Processor Linux 5.11.0-46-generic #51~20.04.1-Ubuntu SMP Fri Jan 7 06:51:40 UTC 2022 x86_64 x86_64","title":"System Information"},{"location":"python/fast_folder_iteration/#cpu-info","text":"Physical cores Total cores Max frequency Min frequency Current frequency 4 8 3400 400 1.892","title":"CPU Info"},{"location":"python/fast_folder_iteration/#cpu-usage-per-core","text":"0 1 2 3 4 5 6 7 Total 15.6 16.5 10.4 14.1 15.2 14.4 15.2 12.4 14","title":"CPU Usage Per Core"},{"location":"python/fast_folder_iteration/#memory-information","text":"Total Available Used Percentage 15.51GB 4.77GB 9.56GB 69.2%","title":"Memory Information"},{"location":"python/fast_folder_iteration/#swap","text":"Total Free Used Percentage 15.26GB 3.28GB 11.98GB 78.5% Text Only Creating sample files + Creating folder ./test_files + Creating files LEVELS=6 FOLDER_COUNT=6 FILE_COUNT_BY_FOLDER=20 + Created 933120 files in 0:02:08.928680 * Running iterators: GlobFolderIterator IGlobFolderIterator OSWalkFolderIterator ScanDirIterator PathLibFolderIterator","title":"SWAP"},{"location":"python/fast_folder_iteration/#memory-usage","text":"Iterator RSS VMS DATA IGlobFolderIterator 111280128 96468992 96468992 OSWalkFolderIterator 111280128 96468992 96468992 ScanDirIterator 111280128 96468992 96468992 GlobFolderIterator 117309440 102498304 120254464 PathLibFolderIterator 469721088 455081984 455081984","title":"MEMORY USAGE"},{"location":"python/fast_folder_iteration/#elapsed-time","text":"Iterator Elapsed time X ScanDirIterator 0:00:01.317526 1 OSWalkFolderIterator 0:00:02.496639 1.9 PathLibFolderIterator 0:00:10.464794 7.9 IGlobFolderIterator 0:00:14.358165 10.9 GlobFolderIterator 0:00:15.308936 11.6","title":"ELAPSED TIME"},{"location":"python/fast_folder_iteration/#time-for-first-file","text":"Iterator Elapsed time X ScanDirIterator 0:00:00.000098 1 OSWalkFolderIterator 0:00:00.000247 2.5 PathLibFolderIterator 0:00:00.000690 7 IGlobFolderIterator 0:00:00.001135 11.6 GlobFolderIterator 0:00:07.831005 79908.2 You can check the source code for this here . Image from this wikipedia article .","title":"TIME FOR FIRST FILE"},{"location":"python/metaclass_tutorial/","tags":["python","tutorial"],"text":"Original link Python Metaclass Tutorial (with Examples) In this Python tutorial, we will discuss the concept of a \u201cMetaclass\u201d, and how it can be used effectively. Metaclasses are a powerful feature in Python that allow you to create classes dynamically at runtime. In Python, everything is an object, including classes. When you define a class in Python, you are actually creating an object of type type. This means that you can use metaclasses to create custom classes with their own behaviors and attributes. In a nutshell, a metaclass is a class that creates other classes. When you define a class with a metaclass, you are essentially telling Python to use that metaclass to create the class object. Metaclasses can be used to add new functionality to classes, modify the behavior of existing classes, and perform validation on class attributes. The importance of metaclasses in Python programming cannot be overstated. They are a powerful tool that can be used to create more dynamic and flexible programs. With metaclasses, you can customize the way classes are created and add new features to your classes that would be difficult or impossible to achieve with normal class inheritance. This is just one example of the many ways that metaclasses can be used to customize class creation in Python. In the following sections of this Python tutorial, we\u2019ll explore the basics of a metaclass, as well as more advanced features and use cases. The Basics of Metaclasses in Python In order to understand metaclasses in Python, it\u2019s important to first understand the type() function. The type() function is the built-in metaclass in Python, and is used to create new classes. When you define a new class in Python, you are actually calling the type() function with three arguments: the name of the class, the tuple of base classes, and a dictionary containing the attributes of the class. For example: Python class MyClass : pass Is equivalent to: Python MyClass = type ( 'MyClass' , (), {}) In this example, we are calling the type() function with the arguments 'MyClass', an empty tuple for the base classes, and an empty dictionary for the attributes. Now that we understand the type() function, let\u2019s take a look at how we can create custom metaclasses. To create a custom metaclass, we simply define a new class that inherits from type. For example: Python class MyMeta ( type ): pass In this example, we are defining a new class called MyMeta that inherits from type. This means that MyMeta is itself a metaclass, and can be used to create new classes. When creating a custom metaclass, we can define two special methods: __new__() and __init__() . The __new__() method is called when the metaclass is used to create a new class object, and is responsible for creating and returning the new class object. The __init__() method is called after the new class object has been created, and is responsible for initializing the class attributes. Here\u2019s an example of a custom metaclass that adds a new class attribute: Python class MyMeta ( type ): def __new__ ( cls , name , bases , attrs ): attrs [ 'custom_attribute' ] = 'Hello, world!' return super () . __new__ ( cls , name , bases , attrs ) class MyClass ( metaclass = MyMeta ): pass print ( MyClass . custom_attribute ) # Output: \"Hello, world!\" In this example, we define a new metaclass called MyMeta that adds the custom_attribute to every new class it creates. Then, we define a new class called MyClass that uses MyMeta as its metaclass. When we create an instance of MyClass, we can see that it automatically has the custom_attribute. In the next section, we will explore these two functions (new and init) in greater detail with some new examples. Creating Custom Metaclasses in Python Now that we have an understanding of the basics of metaclasses and how to define them, let\u2019s explore some more examples of how to use metaclasses and their associated methods. new() Function The new() method is responsible for creating and returning a new class object. It takes four parameters: cls: the metaclass being called name: the name of the class being created bases: a tuple of base classes attrs: a dictionary of class attributes Let\u2019s take a look at an example that demonstrates the use of the new() method: Python class MyMeta ( type ): def __new__ ( cls , name , bases , attrs ): new_attrs = {} for attr_name , attr_value in attrs . items (): if isinstance ( attr_value , str ): new_attrs [ attr_name . upper ()] = attr_value else : new_attrs [ attr_name ] = attr_value return super () . __new__ ( cls , name , bases , new_attrs ) class MyClass ( metaclass = MyMeta ): x = 'hello' y = 123 z = 'world' print ( MyClass . X ) # Output: \"hello\" print ( MyClass . Z ) # Output: \"world\" # MyClass.y remains unchanged because its an integer In this example, we define a new metaclass called MyMeta that modifies the class attributes by converting the values of any string attributes to uppercase. Then, we define a new class called MyClass that uses MyMeta as its metaclass. When we create an instance of MyClass, we can see that the string attributes have been converted to uppercase. init() Function The init() method is responsible for initializing the class attributes. It takes three parameters: self: the newly created class object name: the name of the class being created bases: a tuple of base classes Here\u2019s an example of a custom metaclass that adds a new method to every class it creates: Python class MyMeta ( type ): def __init__ ( self , name , bases ): super () . __init__ ( name , bases ) self . foo = lambda self : print ( 'Hello from foo!' ) class MyClass ( metaclass = MyMeta ): pass obj = MyClass () obj . foo () # Output: \"Hello from foo!\" In this example, we define a new metaclass called MyMeta that adds a new method called foo() to every class it creates. Then, we define a new class called MyClass that uses MyMeta as its metaclass. When we create an instance of MyClass and call the foo() method, we can see that it works as expected. In the next section of this tutorial, we will explore some more advanced use cases of a Metaclass in Python. Advanced Metaclass Features in Python Metaclass inheritance Just like classes can inherit from other classes, metaclasses can also inherit from other metaclasses. This allows for the creation of complex hierarchies of metaclasses that can have their own special behaviors and attributes. To define a metaclass that inherits from another metaclass, simply specify the parent metaclass as the first argument when defining the new metaclass. For example: Python class MyBaseMeta ( type ): pass class MyChildMeta ( MyBaseMeta ): pass In this example, we define a new metaclass called MyBaseMeta, and then define a child metaclass called MyChildMeta that inherits from MyBaseMeta. Here\u2019s a more detailed example of metaclass inheritance: Python class BaseMeta ( type ): def __new__ ( cls , name , bases , attrs ): print ( \"Creating class\" , name , \"with base classes\" , bases ) return super () . __new__ ( cls , name , bases , attrs ) class ChildMeta ( BaseMeta ): def __new__ ( cls , name , bases , attrs ): print ( \"Creating child class\" , name ) return super () . __new__ ( cls , name , bases , attrs ) class MyBaseClass ( metaclass = BaseMeta ): pass class MyChildClass ( metaclass = ChildMeta ): pass In this example, we define two metaclasses: BaseMeta and ChildMeta. ChildMeta inherits from BaseMeta. When MyBaseClass and MyChildClass are defined, the new method of each respective metaclass is called. When MyBaseClass is defined, only BaseMeta\u2018s new method is called. However, when MyChildClass is defined, both ChildMeta\u2018s and BaseMeta\u2018s new methods are called, in that order. Output from defining the MyBaseClass. Text Only # Creating class MyBaseClass with base classes () Output from defining the MyChildClass. Text Only # Creating class MyBaseClass with base classes () # Creating child class MyChildClass # Creating class MyChildClass with base classes () Multiple inheritance with metaclasses Just like classes, metaclasses can also use multiple inheritance. This allows for even more complex hierarchies of metaclasses that can have their own unique behaviors and attributes. To specify multiple inheritance in a metaclass, simply provide a tuple of parent metaclasses as the first argument when defining the new metaclass. For example: Python class MyBaseMeta1 ( type ): pass class MyBaseMeta2 ( type ): pass class MyChildMeta ( MyBaseMeta1 , MyBaseMeta2 ): pass In this example, we define two base metaclasses (MyBaseMeta1 and MyBaseMeta2), and then define a child metaclass called MyChildMeta that inherits from both base metaclasses. Dynamically generating classes with metaclasses Metaclasses can be used to dynamically generate new classes at runtime. This can be useful in situations where you need to create many similar classes, or when you need to generate classes based on user input or configuration files. To generate a new class dynamically with a metaclass, simply call the metaclass with the appropriate arguments. For example: Python class MyMeta ( type ): pass class MyClass1 ( metaclass = MyMeta ): pass class MyClass2 ( metaclass = MyMeta ): pass def create_class ( class_name ): return MyMeta ( class_name , (), {}) MyClass3 = create_class ( 'MyClass3' ) In this example, we define a new metaclass called MyMeta, and then use it to generate three new classes (MyClass1, MyClass2, and MyClass3). The MyClass3 class is generated dynamically at runtime using the create_class() function, which calls the MyMeta metaclass with the appropriate arguments. In the next section of this tutorial, we\u2019ll take a look at some of the special attributes and methods that can be defined in a python metaclass. Python Metaclass: Special Attributes and Methods In addition to the __new__ () and __init__ () methods, metaclasses can also define special attributes and methods that affect how new classes are created. Let\u2019s take a look at some of the most commonly used metaclass attributes and methods. classcell() This method is called when a new class is defined inside another class. It takes two arguments: the metaclass and the cell that contains the class definition. Python class MyMeta ( type ): def classcell ( cls , cell ): print ( f \"Class ' { cls .** name ** } ' defined in ' { cell . cell_name } '\" ) class MyClass ( metaclass = MyMeta ): class MyNestedClass : pass In this example, we define a new metaclass called MyMeta that defines the classcell() method. When we define a new nested class called MyNestedClass inside MyClass, the classcell() method is called with the MyMeta metaclass and the cell that contains the class definition. The method prints out a message indicating the name of the class and the name of the cell where it was defined. prepare() This method is called before the __new__() method when a new class is created. It takes three arguments: the metaclass, the name of the class, and the list of base classes. It returns a new dictionary of class attributes that will be used to create the new class. Python class MyMeta ( type ): def prepare ( cls , name , bases ): print ( f \"Preparing class ' { name } '\" ) return { 'custom_attribute' : 'Hello, world!' } class MyClass ( metaclass = MyMeta ): pass print ( MyClass . custom_attribute ) # Output: \"Hello, world!\" In this example, we define a new metaclass called MyMeta that defines the prepare() method. When we create a new class called MyClass with MyMeta as its metaclass, the prepare() method is called with MyMeta, the name 'MyClass', and an empty tuple for the base classes. The method returns a new dictionary containing a single attribute, custom_attribute, with the value 'Hello, world!'. This dictionary is then used to create the new class object. __instancecheck__() and __subclasscheck__() These methods are called when checking the type of an object or the subclass relationship between two classes. They take two arguments: the metaclass and the object or class being checked. They should return True if the object or class satisfies the type or subclass relationship, and False otherwise. Python class MyMeta ( type ): def __instancecheck__ ( cls , instance ): print ( f \"Checking instance of ' { cls .** name ** } '\" ) return isinstance ( instance , str ) def __subclasscheck__ ( cls , subclass ): print ( f \"Checking subclass of ' { cls . __name__ } '\" ) return issubclass ( subclass , str ) class MyString ( str , metaclass = MyMeta ): pass my_string = MyString ( 'Hello, world!' ) # Output: \"Checking instance of 'MyString'\", \"True\" print ( isinstance ( my_string , MyString )) # Output: \"Checking subclass of 'MyString'\", \"True\" print ( issubclass ( str , MyString )) In this example, we define a new metaclass called MyMeta that defines the __instancecheck__ () and __subclasscheck__ () methods. When we define a new class called MyString that inherits from str and uses MyMeta as its metaclass, these methods are called when we check the instance type of my_string and the subclass relationship between str and MyString. The __instancecheck__ () method prints out a message indicating that we are checking an instance of 'MyString', and returns True if the instance is a string. The __subclasscheck__ () method prints out a message indicating that we are checking a subclass of 'MyString', and returns True if the subclass is a string.","title":"Tutorial Metaclass"},{"location":"python/metaclass_tutorial/#the-basics-of-metaclasses-in-python","text":"In order to understand metaclasses in Python, it\u2019s important to first understand the type() function. The type() function is the built-in metaclass in Python, and is used to create new classes. When you define a new class in Python, you are actually calling the type() function with three arguments: the name of the class, the tuple of base classes, and a dictionary containing the attributes of the class. For example: Python class MyClass : pass Is equivalent to: Python MyClass = type ( 'MyClass' , (), {}) In this example, we are calling the type() function with the arguments 'MyClass', an empty tuple for the base classes, and an empty dictionary for the attributes. Now that we understand the type() function, let\u2019s take a look at how we can create custom metaclasses. To create a custom metaclass, we simply define a new class that inherits from type. For example: Python class MyMeta ( type ): pass In this example, we are defining a new class called MyMeta that inherits from type. This means that MyMeta is itself a metaclass, and can be used to create new classes. When creating a custom metaclass, we can define two special methods: __new__() and __init__() . The __new__() method is called when the metaclass is used to create a new class object, and is responsible for creating and returning the new class object. The __init__() method is called after the new class object has been created, and is responsible for initializing the class attributes. Here\u2019s an example of a custom metaclass that adds a new class attribute: Python class MyMeta ( type ): def __new__ ( cls , name , bases , attrs ): attrs [ 'custom_attribute' ] = 'Hello, world!' return super () . __new__ ( cls , name , bases , attrs ) class MyClass ( metaclass = MyMeta ): pass print ( MyClass . custom_attribute ) # Output: \"Hello, world!\" In this example, we define a new metaclass called MyMeta that adds the custom_attribute to every new class it creates. Then, we define a new class called MyClass that uses MyMeta as its metaclass. When we create an instance of MyClass, we can see that it automatically has the custom_attribute. In the next section, we will explore these two functions (new and init) in greater detail with some new examples.","title":"The Basics of Metaclasses in Python"},{"location":"python/metaclass_tutorial/#creating-custom-metaclasses-in-python","text":"Now that we have an understanding of the basics of metaclasses and how to define them, let\u2019s explore some more examples of how to use metaclasses and their associated methods.","title":"Creating Custom Metaclasses in Python"},{"location":"python/metaclass_tutorial/#new-function","text":"The new() method is responsible for creating and returning a new class object. It takes four parameters: cls: the metaclass being called name: the name of the class being created bases: a tuple of base classes attrs: a dictionary of class attributes Let\u2019s take a look at an example that demonstrates the use of the new() method: Python class MyMeta ( type ): def __new__ ( cls , name , bases , attrs ): new_attrs = {} for attr_name , attr_value in attrs . items (): if isinstance ( attr_value , str ): new_attrs [ attr_name . upper ()] = attr_value else : new_attrs [ attr_name ] = attr_value return super () . __new__ ( cls , name , bases , new_attrs ) class MyClass ( metaclass = MyMeta ): x = 'hello' y = 123 z = 'world' print ( MyClass . X ) # Output: \"hello\" print ( MyClass . Z ) # Output: \"world\" # MyClass.y remains unchanged because its an integer In this example, we define a new metaclass called MyMeta that modifies the class attributes by converting the values of any string attributes to uppercase. Then, we define a new class called MyClass that uses MyMeta as its metaclass. When we create an instance of MyClass, we can see that the string attributes have been converted to uppercase.","title":"new() Function"},{"location":"python/metaclass_tutorial/#init-function","text":"The init() method is responsible for initializing the class attributes. It takes three parameters: self: the newly created class object name: the name of the class being created bases: a tuple of base classes Here\u2019s an example of a custom metaclass that adds a new method to every class it creates: Python class MyMeta ( type ): def __init__ ( self , name , bases ): super () . __init__ ( name , bases ) self . foo = lambda self : print ( 'Hello from foo!' ) class MyClass ( metaclass = MyMeta ): pass obj = MyClass () obj . foo () # Output: \"Hello from foo!\" In this example, we define a new metaclass called MyMeta that adds a new method called foo() to every class it creates. Then, we define a new class called MyClass that uses MyMeta as its metaclass. When we create an instance of MyClass and call the foo() method, we can see that it works as expected. In the next section of this tutorial, we will explore some more advanced use cases of a Metaclass in Python.","title":"init() Function"},{"location":"python/metaclass_tutorial/#advanced-metaclass-features-in-python","text":"","title":"Advanced Metaclass Features in Python"},{"location":"python/metaclass_tutorial/#metaclass-inheritance","text":"Just like classes can inherit from other classes, metaclasses can also inherit from other metaclasses. This allows for the creation of complex hierarchies of metaclasses that can have their own special behaviors and attributes. To define a metaclass that inherits from another metaclass, simply specify the parent metaclass as the first argument when defining the new metaclass. For example: Python class MyBaseMeta ( type ): pass class MyChildMeta ( MyBaseMeta ): pass In this example, we define a new metaclass called MyBaseMeta, and then define a child metaclass called MyChildMeta that inherits from MyBaseMeta. Here\u2019s a more detailed example of metaclass inheritance: Python class BaseMeta ( type ): def __new__ ( cls , name , bases , attrs ): print ( \"Creating class\" , name , \"with base classes\" , bases ) return super () . __new__ ( cls , name , bases , attrs ) class ChildMeta ( BaseMeta ): def __new__ ( cls , name , bases , attrs ): print ( \"Creating child class\" , name ) return super () . __new__ ( cls , name , bases , attrs ) class MyBaseClass ( metaclass = BaseMeta ): pass class MyChildClass ( metaclass = ChildMeta ): pass In this example, we define two metaclasses: BaseMeta and ChildMeta. ChildMeta inherits from BaseMeta. When MyBaseClass and MyChildClass are defined, the new method of each respective metaclass is called. When MyBaseClass is defined, only BaseMeta\u2018s new method is called. However, when MyChildClass is defined, both ChildMeta\u2018s and BaseMeta\u2018s new methods are called, in that order. Output from defining the MyBaseClass. Text Only # Creating class MyBaseClass with base classes () Output from defining the MyChildClass. Text Only # Creating class MyBaseClass with base classes () # Creating child class MyChildClass # Creating class MyChildClass with base classes ()","title":"Metaclass inheritance"},{"location":"python/metaclass_tutorial/#multiple-inheritance-with-metaclasses","text":"Just like classes, metaclasses can also use multiple inheritance. This allows for even more complex hierarchies of metaclasses that can have their own unique behaviors and attributes. To specify multiple inheritance in a metaclass, simply provide a tuple of parent metaclasses as the first argument when defining the new metaclass. For example: Python class MyBaseMeta1 ( type ): pass class MyBaseMeta2 ( type ): pass class MyChildMeta ( MyBaseMeta1 , MyBaseMeta2 ): pass In this example, we define two base metaclasses (MyBaseMeta1 and MyBaseMeta2), and then define a child metaclass called MyChildMeta that inherits from both base metaclasses.","title":"Multiple inheritance with metaclasses"},{"location":"python/metaclass_tutorial/#dynamically-generating-classes-with-metaclasses","text":"Metaclasses can be used to dynamically generate new classes at runtime. This can be useful in situations where you need to create many similar classes, or when you need to generate classes based on user input or configuration files. To generate a new class dynamically with a metaclass, simply call the metaclass with the appropriate arguments. For example: Python class MyMeta ( type ): pass class MyClass1 ( metaclass = MyMeta ): pass class MyClass2 ( metaclass = MyMeta ): pass def create_class ( class_name ): return MyMeta ( class_name , (), {}) MyClass3 = create_class ( 'MyClass3' ) In this example, we define a new metaclass called MyMeta, and then use it to generate three new classes (MyClass1, MyClass2, and MyClass3). The MyClass3 class is generated dynamically at runtime using the create_class() function, which calls the MyMeta metaclass with the appropriate arguments. In the next section of this tutorial, we\u2019ll take a look at some of the special attributes and methods that can be defined in a python metaclass.","title":"Dynamically generating classes with metaclasses"},{"location":"python/metaclass_tutorial/#python-metaclass-special-attributes-and-methods","text":"In addition to the __new__ () and __init__ () methods, metaclasses can also define special attributes and methods that affect how new classes are created. Let\u2019s take a look at some of the most commonly used metaclass attributes and methods.","title":"Python Metaclass: Special Attributes and Methods"},{"location":"python/metaclass_tutorial/#classcell","text":"This method is called when a new class is defined inside another class. It takes two arguments: the metaclass and the cell that contains the class definition. Python class MyMeta ( type ): def classcell ( cls , cell ): print ( f \"Class ' { cls .** name ** } ' defined in ' { cell . cell_name } '\" ) class MyClass ( metaclass = MyMeta ): class MyNestedClass : pass In this example, we define a new metaclass called MyMeta that defines the classcell() method. When we define a new nested class called MyNestedClass inside MyClass, the classcell() method is called with the MyMeta metaclass and the cell that contains the class definition. The method prints out a message indicating the name of the class and the name of the cell where it was defined.","title":"classcell()"},{"location":"python/metaclass_tutorial/#prepare","text":"This method is called before the __new__() method when a new class is created. It takes three arguments: the metaclass, the name of the class, and the list of base classes. It returns a new dictionary of class attributes that will be used to create the new class. Python class MyMeta ( type ): def prepare ( cls , name , bases ): print ( f \"Preparing class ' { name } '\" ) return { 'custom_attribute' : 'Hello, world!' } class MyClass ( metaclass = MyMeta ): pass print ( MyClass . custom_attribute ) # Output: \"Hello, world!\" In this example, we define a new metaclass called MyMeta that defines the prepare() method. When we create a new class called MyClass with MyMeta as its metaclass, the prepare() method is called with MyMeta, the name 'MyClass', and an empty tuple for the base classes. The method returns a new dictionary containing a single attribute, custom_attribute, with the value 'Hello, world!'. This dictionary is then used to create the new class object.","title":"prepare()"},{"location":"python/metaclass_tutorial/#__instancecheck__-and-__subclasscheck__","text":"These methods are called when checking the type of an object or the subclass relationship between two classes. They take two arguments: the metaclass and the object or class being checked. They should return True if the object or class satisfies the type or subclass relationship, and False otherwise. Python class MyMeta ( type ): def __instancecheck__ ( cls , instance ): print ( f \"Checking instance of ' { cls .** name ** } '\" ) return isinstance ( instance , str ) def __subclasscheck__ ( cls , subclass ): print ( f \"Checking subclass of ' { cls . __name__ } '\" ) return issubclass ( subclass , str ) class MyString ( str , metaclass = MyMeta ): pass my_string = MyString ( 'Hello, world!' ) # Output: \"Checking instance of 'MyString'\", \"True\" print ( isinstance ( my_string , MyString )) # Output: \"Checking subclass of 'MyString'\", \"True\" print ( issubclass ( str , MyString )) In this example, we define a new metaclass called MyMeta that defines the __instancecheck__ () and __subclasscheck__ () methods. When we define a new class called MyString that inherits from str and uses MyMeta as its metaclass, these methods are called when we check the instance type of my_string and the subclass relationship between str and MyString. The __instancecheck__ () method prints out a message indicating that we are checking an instance of 'MyString', and returns True if the instance is a string. The __subclasscheck__ () method prints out a message indicating that we are checking a subclass of 'MyString', and returns True if the subclass is a string.","title":"__instancecheck__() and __subclasscheck__()"},{"location":"python/virtual_env_setup/","tags":["python","environment"],"text":"Python Virtual Environment Setup Post created at 2022-12-12 10:30 Setting your virtual environment with another python version. While I'm writing this post, I'm using Ubuntu 22.04 LTS Jammy Jellyfish, wich has python 3.10. But, I need to work on a project that runs on python 3.8. To assure that the development environment will be the same to the production environment, I have to setup this. I don't want to use docker in this case. To start, we need to install required packages: Bash sudo apt install dirmngr ca-certificates software-properties-common apt-transport-https -y We will use the launchpad PPA's to get things done easely. Next, we need to install the GPG keys the repositories. Bash sudo gpg --list-keys Output gpg: directory '/root/.gnupg' created gpg: keybox '/root/.gnupg/pubring.kbx' created gpg: /root/.gnupg/trustdb.gpg: trustdb created Now, wee need to import the GPG key. Bash sudo gpg --no-default-keyring --keyring /usr/share/keyrings/deadsnakes.gpg --keyserver keyserver.ubuntu.com --recv-keys F23C5A6CF475977595C89F51BA6932366A755776 Output gpg: key BA6932366A755776: public key \"Launchpad PPA for deadsnakes\" imported gpg: Total number processed: 1 gpg: imported: 1 If no errors, you can continue importing PPA. Use the command below to your installed version: Ubuntu 22.04 LTS Jammy Jellyfish Bash echo 'deb [signed-by=/usr/share/keyrings/deadsnakes.gpg] https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy main' | sudo tee -a /etc/apt/sources.list.d/python.list Ubuntu 20.04 LTS Focal Fossa Bash echo 'deb [signed-by=/usr/share/keyrings/deadsnakes.gpg] https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu focal main' | sudo tee -a /etc/apt/sources.list.d/python.list Complete the python3.8 installation: Bash sudo apt update && sudo apt install python3.8 python3.8-venv python3.8-python3.8-distutils python3.8-dev python3.8-dbg Update pip Bash python3.8 -m pip install --upgrade pip Output Defaulting to user installation because normal site-packages is not writeable Requirement already satisfied: pip in /usr/lib/python3/dist-packages (22.0.2) Collecting pip pip-22.3.1-py3-none-any.whl (2.1 MB) \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 2.5 MB/s eta 0:00:00 Installing collected packages: pip Successfully installed pip-22.3.1 Access your project folder on terminal: Bash cd ~/dev/my_project Create your virtual environment I like to use .venv as virtual environment folder name, but you can use venv or whatever you want. Bash python3.8 -m venv .venv Checking the folder/files created: Bash \u2726 \u276f tree -L 2 .venv .venv \u251c\u2500\u2500 bin \u2502 \u251c\u2500\u2500 activate \u2502 \u251c\u2500\u2500 activate.csh \u2502 \u251c\u2500\u2500 activate.fish \u2502 \u251c\u2500\u2500 Activate.ps1 \u2502 \u251c\u2500\u2500 pip \u2502 \u251c\u2500\u2500 pip3 \u2502 \u251c\u2500\u2500 pip3.8 \u2502 \u251c\u2500\u2500 python -> python3.8 \u2502 \u251c\u2500\u2500 python3 -> python3.8 \u2502 \u2514\u2500\u2500 python3.8 -> /usr/bin/python3.8 \u251c\u2500\u2500 include \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 python3.8 \u251c\u2500\u2500 lib64 -> lib \u2514\u2500\u2500 pyvenv.cfg Activating the virtual environment Visual Studio Code and another editors can automatically detect the virtual environment and activate it. In the terminal you should do this: Bash source .venv/bin/activate And now, you can use the python that you need: Text Only \u276f python --version Python 3.8.16 Post-setup After this, I usually install autopep8 and flake8 for linting/formatting. Bash pip install autopep8 flake8 Thanks for reading! Leave a comment and click the heart icon! Links: How to Install Python 3.8 on Ubuntu 22.04/20.04","title":"Python Virtual Environment Setup"},{"location":"python/virtual_env_setup/#python-virtual-environment-setup","text":"Post created at 2022-12-12 10:30 Setting your virtual environment with another python version. While I'm writing this post, I'm using Ubuntu 22.04 LTS Jammy Jellyfish, wich has python 3.10. But, I need to work on a project that runs on python 3.8. To assure that the development environment will be the same to the production environment, I have to setup this. I don't want to use docker in this case. To start, we need to install required packages: Bash sudo apt install dirmngr ca-certificates software-properties-common apt-transport-https -y We will use the launchpad PPA's to get things done easely. Next, we need to install the GPG keys the repositories. Bash sudo gpg --list-keys Output gpg: directory '/root/.gnupg' created gpg: keybox '/root/.gnupg/pubring.kbx' created gpg: /root/.gnupg/trustdb.gpg: trustdb created Now, wee need to import the GPG key. Bash sudo gpg --no-default-keyring --keyring /usr/share/keyrings/deadsnakes.gpg --keyserver keyserver.ubuntu.com --recv-keys F23C5A6CF475977595C89F51BA6932366A755776 Output gpg: key BA6932366A755776: public key \"Launchpad PPA for deadsnakes\" imported gpg: Total number processed: 1 gpg: imported: 1 If no errors, you can continue importing PPA. Use the command below to your installed version:","title":"Python Virtual Environment Setup"},{"location":"python/virtual_env_setup/#ubuntu-2204-lts-jammy-jellyfish","text":"Bash echo 'deb [signed-by=/usr/share/keyrings/deadsnakes.gpg] https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy main' | sudo tee -a /etc/apt/sources.list.d/python.list","title":"Ubuntu 22.04 LTS Jammy Jellyfish"},{"location":"python/virtual_env_setup/#ubuntu-2004-lts-focal-fossa","text":"Bash echo 'deb [signed-by=/usr/share/keyrings/deadsnakes.gpg] https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu focal main' | sudo tee -a /etc/apt/sources.list.d/python.list","title":"Ubuntu 20.04 LTS Focal Fossa"},{"location":"python/virtual_env_setup/#complete-the-python38-installation","text":"Bash sudo apt update && sudo apt install python3.8 python3.8-venv python3.8-python3.8-distutils python3.8-dev python3.8-dbg","title":"Complete the python3.8 installation:"},{"location":"python/virtual_env_setup/#update-pip","text":"Bash python3.8 -m pip install --upgrade pip Output Defaulting to user installation because normal site-packages is not writeable Requirement already satisfied: pip in /usr/lib/python3/dist-packages (22.0.2) Collecting pip pip-22.3.1-py3-none-any.whl (2.1 MB) \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 2.5 MB/s eta 0:00:00 Installing collected packages: pip Successfully installed pip-22.3.1","title":"Update pip"},{"location":"python/virtual_env_setup/#access-your-project-folder-on-terminal","text":"Bash cd ~/dev/my_project","title":"Access your project folder on terminal:"},{"location":"python/virtual_env_setup/#create-your-virtual-environment","text":"I like to use .venv as virtual environment folder name, but you can use venv or whatever you want. Bash python3.8 -m venv .venv Checking the folder/files created: Bash \u2726 \u276f tree -L 2 .venv .venv \u251c\u2500\u2500 bin \u2502 \u251c\u2500\u2500 activate \u2502 \u251c\u2500\u2500 activate.csh \u2502 \u251c\u2500\u2500 activate.fish \u2502 \u251c\u2500\u2500 Activate.ps1 \u2502 \u251c\u2500\u2500 pip \u2502 \u251c\u2500\u2500 pip3 \u2502 \u251c\u2500\u2500 pip3.8 \u2502 \u251c\u2500\u2500 python -> python3.8 \u2502 \u251c\u2500\u2500 python3 -> python3.8 \u2502 \u2514\u2500\u2500 python3.8 -> /usr/bin/python3.8 \u251c\u2500\u2500 include \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 python3.8 \u251c\u2500\u2500 lib64 -> lib \u2514\u2500\u2500 pyvenv.cfg","title":"Create your virtual environment"},{"location":"python/virtual_env_setup/#activating-the-virtual-environment","text":"Visual Studio Code and another editors can automatically detect the virtual environment and activate it. In the terminal you should do this: Bash source .venv/bin/activate And now, you can use the python that you need: Text Only \u276f python --version Python 3.8.16","title":"Activating the virtual environment"},{"location":"python/virtual_env_setup/#post-setup","text":"After this, I usually install autopep8 and flake8 for linting/formatting. Bash pip install autopep8 flake8 Thanks for reading! Leave a comment and click the heart icon!","title":"Post-setup"},{"location":"python/virtual_env_setup/#links","text":"How to Install Python 3.8 on Ubuntu 22.04/20.04","title":"Links:"},{"location":"tools/_bookmarks/","text":"Open Source Vulnerability Scanner Ghostbin Meld - Compara\u00e7\u00e3o de pastas e arquivos","title":"Tools bookmarks"},{"location":"tools/animated_gifs_from_console/","tags":["gif","console","terminal","bash"],"text":"Creating animated gifs from your terminal Post created at 2022-08-19 08:36 I need to generate some videos to demonstrate console applications running. source Screen casting or capture is boring, and generates large files. Then, I found two command line tools that do the job. First, we need to capture the console interation, and this is done using the Terminal Session Recorder asciinema . Installation instructions can be found here . I'm using Ubuntu, so the installation was easy-peasy. Bash \u276f sudo apt install asciinema [ sudo ] senha para guionardo: A ler as listas de pacotes... Pronto A construir \u00e1rvore de depend\u00eancias A ler a informa\u00e7\u00e3o de estado... Pronto Ser\u00e3o instalados os seguintes NOVOS pacotes: asciinema 0 pacotes actualizados, 1 pacotes novos instalados, 0 a remover e 0 n\u00e3o actualizados. \u00c9 necess\u00e1rio obter 35 ,0 kB de arquivos. Ap\u00f3s esta opera\u00e7\u00e3o, ser\u00e3o utilizados 125 kB adicionais de espa\u00e7o em disco. Obter:1 http://br.archive.ubuntu.com/ubuntu focal/universe amd64 asciinema all 2 .0.2-1 [ 35 ,0 kB ] Obtidos 35 ,0 kB em 7s ( 4 .877 B/s ) A seleccionar pacote anteriormente n\u00e3o seleccionado asciinema. ( A ler a base de dados ... 435184 ficheiros e direct\u00f3rios actualmente instalados. ) A preparar para desempacotar .../asciinema_2.0.2-1_all.deb ... A descompactar asciinema ( 2 .0.2-1 ) ... A instalar asciinema ( 2 .0.2-1 ) ... A processar 'triggers' para man-db ( 2 .9.1-1 ) ... For our first test, we can command: Bash \u276f asciinema rec first.cast asciinema: recording asciicast to first.cast asciinema: press <ctrl-d> or type \"exit\" when you ' re done After that, you can run your commands normally and all your key strokes and console outputs will be recorded into the first.cast file. To finish the capture press CTRL+D or type exit . Check the official usage documentation for more options. Now, we need to generate the animated gif file. The tool to this job is the might agg - asciinema gif generator . It's a rust application, and you can clone the repository and build it, or you can download an binary to your environment surfing to the latest release link . Download the correct version to your system, put the executable in some directory you can reach and execute. Check if the installation is OK. Bash \u276f agg --version agg 1 .1.0 If your shell has some fancy unicode characters (like mine), you can reference a TTF font to render the gif. I like \"JetBrains Mono\", and you can download it from here , or if you like another dev font, you can use. In my case, I saved the TTF files into a folder to use in next step. Generate a gif from the first.cast file created . Bash \u276f ./agg --font-dir ./fonts --font-family \"agave Nerd Font\" first.cast first.gif 31 / 31 [=================================================================] 100 .00 % 47 .71/s And now, we have our first.gif file in current folder.","title":"Creating animated gifs from your terminal"},{"location":"tools/animated_gifs_from_console/#creating-animated-gifs-from-your-terminal","text":"Post created at 2022-08-19 08:36 I need to generate some videos to demonstrate console applications running. source Screen casting or capture is boring, and generates large files. Then, I found two command line tools that do the job. First, we need to capture the console interation, and this is done using the Terminal Session Recorder asciinema . Installation instructions can be found here . I'm using Ubuntu, so the installation was easy-peasy. Bash \u276f sudo apt install asciinema [ sudo ] senha para guionardo: A ler as listas de pacotes... Pronto A construir \u00e1rvore de depend\u00eancias A ler a informa\u00e7\u00e3o de estado... Pronto Ser\u00e3o instalados os seguintes NOVOS pacotes: asciinema 0 pacotes actualizados, 1 pacotes novos instalados, 0 a remover e 0 n\u00e3o actualizados. \u00c9 necess\u00e1rio obter 35 ,0 kB de arquivos. Ap\u00f3s esta opera\u00e7\u00e3o, ser\u00e3o utilizados 125 kB adicionais de espa\u00e7o em disco. Obter:1 http://br.archive.ubuntu.com/ubuntu focal/universe amd64 asciinema all 2 .0.2-1 [ 35 ,0 kB ] Obtidos 35 ,0 kB em 7s ( 4 .877 B/s ) A seleccionar pacote anteriormente n\u00e3o seleccionado asciinema. ( A ler a base de dados ... 435184 ficheiros e direct\u00f3rios actualmente instalados. ) A preparar para desempacotar .../asciinema_2.0.2-1_all.deb ... A descompactar asciinema ( 2 .0.2-1 ) ... A instalar asciinema ( 2 .0.2-1 ) ... A processar 'triggers' para man-db ( 2 .9.1-1 ) ... For our first test, we can command: Bash \u276f asciinema rec first.cast asciinema: recording asciicast to first.cast asciinema: press <ctrl-d> or type \"exit\" when you ' re done After that, you can run your commands normally and all your key strokes and console outputs will be recorded into the first.cast file. To finish the capture press CTRL+D or type exit . Check the official usage documentation for more options. Now, we need to generate the animated gif file. The tool to this job is the might agg - asciinema gif generator . It's a rust application, and you can clone the repository and build it, or you can download an binary to your environment surfing to the latest release link . Download the correct version to your system, put the executable in some directory you can reach and execute. Check if the installation is OK. Bash \u276f agg --version agg 1 .1.0 If your shell has some fancy unicode characters (like mine), you can reference a TTF font to render the gif. I like \"JetBrains Mono\", and you can download it from here , or if you like another dev font, you can use. In my case, I saved the TTF files into a folder to use in next step. Generate a gif from the first.cast file created . Bash \u276f ./agg --font-dir ./fonts --font-family \"agave Nerd Font\" first.cast first.gif 31 / 31 [=================================================================] 100 .00 % 47 .71/s And now, we have our first.gif file in current folder.","title":"Creating animated gifs from your terminal"},{"location":"tools/audio_device_switch/","tags":["linux","audio","automation","bash","golang"],"text":"Entre reuni\u00f5es virtuais usando headset, escutar m\u00fasica ou mesmo s\u00f3 assistir uma aula, eu prefiro que o headset seja usado s\u00f3 quando \u00e9 necess\u00e1rio um isolamento. Para as outras op\u00e7\u00f5es, as caixas de som ambiente s\u00e3o bem mais confort\u00e1veis. No Ubuntu, \u00e9 meio chatinho ficar chaveando entre os dispositivos de sa\u00edda de \u00e1udio. Aqui na minha m\u00e1quina, s\u00e3o uma meia d\u00fazia de cliques de mouse. Ent\u00e3o este script aqui em baixo deixou as coisas bem mais interessantes. Fiz algumas altera\u00e7\u00f5es, mas a ideia eu peguei desse link . Source files BASH GoLang audio-device-switch.sh #!/bin/bash declare -i sinks_count = ` pacmd list-sinks | grep -c index: [[ :space: ]][[ :digit: ]] ` declare -i active_sink_index = ` pacmd list-sinks | sed -n -e 's/\\*[[:space:]]index:[[:space:]]\\([[:digit:]]\\)/\\1/p' ` declare -i major_sink_index = $sinks_count declare -i next_sink_index = 1 if [ $active_sink_index -ne $major_sink_index ] ; then next_sink_index = active_sink_index+1 fi declare -i new_sink_index = $next_sink_index #change the default sink pacmd \"set-default-sink ${ new_sink_index } \" # move all inputs to the new sink: $new_sink_index\" for app in $( pacmd list-sink-inputs | sed -n -e 's/index:[[:space:]]\\([[:digit:]]\\)/\\1/p' ) ; do pacmd \"move-sink-input $app $new_sink_index \" done # echo 'display notification' declare -i ndx = 1 pacmd list-sinks | sed -n -e 's/device.description[[:space:]]=[[:space:]]\"\\(.*\\)\"/\\1/p' | while read line ; do if [ $new_sink_index -eq $ndx ] ; then notify-send -i audio-volume-high \"Sound output switched to\" \" $line \" exit fi ndx = ndx+1 done audio-device-switch.go package main import ( \"fmt\" \"log\" \"os/exec\" \"strconv\" \"strings\" \"sync\" ) type Sink struct { Index int Name string Current bool } var ( sinks [] Sink maxIndex int currentSinkIndex int getSinkError error inputIndexes [] int getInputIndexeError error ) func get_pacmd_cmd ( args ... string ) ( lines [] string , err error ) { log . Printf ( \"pacmd %v\" , args ) out , err := exec . Command ( \"pacmd\" , args ... ). Output () if err != nil { return nil , fmt . Errorf ( \"Get pacmd %v : %v\" , args , err ) } raw_lines := strings . Split ( string ( out ), \"\\n\" ) lines = make ([] string , 0 , len ( raw_lines )) for _ , line := range raw_lines { line = strings . TrimSpace ( strings . ReplaceAll ( line , \"\\t\" , \"\" )) if line != \"\" { lines = append ( lines , line ) } } return } func get_pacmd_sinks ( wg * sync . WaitGroup ) { defer wg . Done () var lines [] string if lines , getSinkError = get_pacmd_cmd ( \"list-sinks\" ); getSinkError != nil { return } lastIndex := 0 currentSinkIndex = - 1 currentIndex := false lastName := \"\" maxIndex = 0 for _ , line := range lines { line = strings . ReplaceAll ( strings . TrimSpace ( line ), \"\\t\" , \"\" ) if strings . Contains ( line , \"index:\" ) { if lastIndex , getSinkError = strconv . Atoi ( strings . TrimSpace ( strings . Split ( line , \":\" )[ 1 ])); getSinkError != nil { return } currentIndex = strings . HasPrefix ( line , \"*\" ) if lastIndex > maxIndex { maxIndex = lastIndex } continue } if strings . HasPrefix ( line , \"alsa.name =\" ) { lastName = strings . ReplaceAll ( strings . TrimSpace ( strings . Split ( line , \"=\" )[ 1 ]), \"\\\"\" , \"\" ) sinks = append ( sinks , Sink { lastIndex , lastName , currentIndex }) if currentIndex { currentSinkIndex = len ( sinks ) - 1 } lastIndex = 0 currentIndex = false lastName = \"\" continue } } log . Printf ( \"Sinks: %v\" , sinks ) return } func get_pacmd_sink_inputs ( wg * sync . WaitGroup ) { defer wg . Done () var lines [] string if lines , getInputIndexeError = get_pacmd_cmd ( \"list-sink-inputs\" ); getInputIndexeError != nil { return } inputIndexes = make ([] int , 0 ) index := 0 for _ , line := range lines { line = strings . ReplaceAll ( strings . TrimSpace ( line ), \"\\t\" , \"\" ) if strings . Contains ( line , \"index:\" ) { if index , getInputIndexeError = strconv . Atoi ( strings . TrimSpace ( strings . Split ( line , \":\" )[ 1 ])); getInputIndexeError != nil { return } inputIndexes = append ( inputIndexes , index ) } } return } func set_pacmd_sink ( sinkIndex int ) ( err error ) { for _ , inputIndex := range inputIndexes { _ , err := get_pacmd_cmd ( \"move-sink-input\" , strconv . Itoa ( inputIndex ), strconv . Itoa ( sinkIndex )) if err != nil { return fmt . Errorf ( \"Move sink input %v to %v : %v\" , inputIndex , sinkIndex , err ) } } return } func notify_send ( args ... string ) error { out , err := exec . Command ( \"notify-send\" , args ... ). Output () if err != nil { log . Printf ( \"Notify-send %v : %v\\n%s\" , args , err , string ( out )) return fmt . Errorf ( \"notify-send %v : %v\" , args , err ) } return nil } func main () { var wg sync . WaitGroup wg . Add ( 2 ) go get_pacmd_sinks ( & wg ) go get_pacmd_sink_inputs ( & wg ) wg . Wait () if getSinkError != nil { log . Fatalf ( \"get_pacmd_sinks %v\" , getSinkError ) } if getInputIndexeError != nil { log . Fatalf ( \"get_pacmd_sink_inputs %v\" , getInputIndexeError ) } oldSink := sinks [ currentSinkIndex ] if currentSinkIndex == - 1 { currentSinkIndex = 0 } if currentSinkIndex < len ( sinks ) - 1 { currentSinkIndex ++ } else { currentSinkIndex = 0 } newSink := sinks [ currentSinkIndex ] _ , err := get_pacmd_cmd ( \"set-default-sink\" , strconv . Itoa ( newSink . Index )) if err != nil { log . Fatalf ( \"set-default-sink %v\" , err ) } log . Printf ( \"Switching from %v to %v\" , oldSink , newSink ) if err := set_pacmd_sink ( newSink . Index ); err != nil { log . Fatalf ( \"set_pacmd_sink %v\" , err ) } if err := notify_send ( \"-i\" , \"audio-volume-high\" , \"Sound output switched to \" + newSink . Name ); err != nil { log . Fatalf ( \"%v\" , err ) } } Salve o arquivo em uma pasta segura, por exemplo /usr/local/bin/audio-device-switch.sh e d\u00ea as permiss\u00f5es de execu\u00e7\u00e3o: Bash sudo chmod 755 /usr/local/bin/audio-device-switch.sh Vers\u00e3o go Configura\u00e7\u00f5es de atalho de teclado Acesse o menu de setup da sua distribui\u00e7\u00e3o, e informe o nome do atalho (Audio Device Switch, no meu caso), o local onde o script est\u00e1 salvo, e o atalho que voc\u00ea deseja usar (Eu escolhi Win+F12). Prontinho, agora \u00e9 s\u00f3 aproveitar.","title":"Atalho para trocar dispositivo de \u00e1udio no Linux"},{"location":"tools/audio_device_switch/#source-files","text":"BASH GoLang audio-device-switch.sh #!/bin/bash declare -i sinks_count = ` pacmd list-sinks | grep -c index: [[ :space: ]][[ :digit: ]] ` declare -i active_sink_index = ` pacmd list-sinks | sed -n -e 's/\\*[[:space:]]index:[[:space:]]\\([[:digit:]]\\)/\\1/p' ` declare -i major_sink_index = $sinks_count declare -i next_sink_index = 1 if [ $active_sink_index -ne $major_sink_index ] ; then next_sink_index = active_sink_index+1 fi declare -i new_sink_index = $next_sink_index #change the default sink pacmd \"set-default-sink ${ new_sink_index } \" # move all inputs to the new sink: $new_sink_index\" for app in $( pacmd list-sink-inputs | sed -n -e 's/index:[[:space:]]\\([[:digit:]]\\)/\\1/p' ) ; do pacmd \"move-sink-input $app $new_sink_index \" done # echo 'display notification' declare -i ndx = 1 pacmd list-sinks | sed -n -e 's/device.description[[:space:]]=[[:space:]]\"\\(.*\\)\"/\\1/p' | while read line ; do if [ $new_sink_index -eq $ndx ] ; then notify-send -i audio-volume-high \"Sound output switched to\" \" $line \" exit fi ndx = ndx+1 done audio-device-switch.go package main import ( \"fmt\" \"log\" \"os/exec\" \"strconv\" \"strings\" \"sync\" ) type Sink struct { Index int Name string Current bool } var ( sinks [] Sink maxIndex int currentSinkIndex int getSinkError error inputIndexes [] int getInputIndexeError error ) func get_pacmd_cmd ( args ... string ) ( lines [] string , err error ) { log . Printf ( \"pacmd %v\" , args ) out , err := exec . Command ( \"pacmd\" , args ... ). Output () if err != nil { return nil , fmt . Errorf ( \"Get pacmd %v : %v\" , args , err ) } raw_lines := strings . Split ( string ( out ), \"\\n\" ) lines = make ([] string , 0 , len ( raw_lines )) for _ , line := range raw_lines { line = strings . TrimSpace ( strings . ReplaceAll ( line , \"\\t\" , \"\" )) if line != \"\" { lines = append ( lines , line ) } } return } func get_pacmd_sinks ( wg * sync . WaitGroup ) { defer wg . Done () var lines [] string if lines , getSinkError = get_pacmd_cmd ( \"list-sinks\" ); getSinkError != nil { return } lastIndex := 0 currentSinkIndex = - 1 currentIndex := false lastName := \"\" maxIndex = 0 for _ , line := range lines { line = strings . ReplaceAll ( strings . TrimSpace ( line ), \"\\t\" , \"\" ) if strings . Contains ( line , \"index:\" ) { if lastIndex , getSinkError = strconv . Atoi ( strings . TrimSpace ( strings . Split ( line , \":\" )[ 1 ])); getSinkError != nil { return } currentIndex = strings . HasPrefix ( line , \"*\" ) if lastIndex > maxIndex { maxIndex = lastIndex } continue } if strings . HasPrefix ( line , \"alsa.name =\" ) { lastName = strings . ReplaceAll ( strings . TrimSpace ( strings . Split ( line , \"=\" )[ 1 ]), \"\\\"\" , \"\" ) sinks = append ( sinks , Sink { lastIndex , lastName , currentIndex }) if currentIndex { currentSinkIndex = len ( sinks ) - 1 } lastIndex = 0 currentIndex = false lastName = \"\" continue } } log . Printf ( \"Sinks: %v\" , sinks ) return } func get_pacmd_sink_inputs ( wg * sync . WaitGroup ) { defer wg . Done () var lines [] string if lines , getInputIndexeError = get_pacmd_cmd ( \"list-sink-inputs\" ); getInputIndexeError != nil { return } inputIndexes = make ([] int , 0 ) index := 0 for _ , line := range lines { line = strings . ReplaceAll ( strings . TrimSpace ( line ), \"\\t\" , \"\" ) if strings . Contains ( line , \"index:\" ) { if index , getInputIndexeError = strconv . Atoi ( strings . TrimSpace ( strings . Split ( line , \":\" )[ 1 ])); getInputIndexeError != nil { return } inputIndexes = append ( inputIndexes , index ) } } return } func set_pacmd_sink ( sinkIndex int ) ( err error ) { for _ , inputIndex := range inputIndexes { _ , err := get_pacmd_cmd ( \"move-sink-input\" , strconv . Itoa ( inputIndex ), strconv . Itoa ( sinkIndex )) if err != nil { return fmt . Errorf ( \"Move sink input %v to %v : %v\" , inputIndex , sinkIndex , err ) } } return } func notify_send ( args ... string ) error { out , err := exec . Command ( \"notify-send\" , args ... ). Output () if err != nil { log . Printf ( \"Notify-send %v : %v\\n%s\" , args , err , string ( out )) return fmt . Errorf ( \"notify-send %v : %v\" , args , err ) } return nil } func main () { var wg sync . WaitGroup wg . Add ( 2 ) go get_pacmd_sinks ( & wg ) go get_pacmd_sink_inputs ( & wg ) wg . Wait () if getSinkError != nil { log . Fatalf ( \"get_pacmd_sinks %v\" , getSinkError ) } if getInputIndexeError != nil { log . Fatalf ( \"get_pacmd_sink_inputs %v\" , getInputIndexeError ) } oldSink := sinks [ currentSinkIndex ] if currentSinkIndex == - 1 { currentSinkIndex = 0 } if currentSinkIndex < len ( sinks ) - 1 { currentSinkIndex ++ } else { currentSinkIndex = 0 } newSink := sinks [ currentSinkIndex ] _ , err := get_pacmd_cmd ( \"set-default-sink\" , strconv . Itoa ( newSink . Index )) if err != nil { log . Fatalf ( \"set-default-sink %v\" , err ) } log . Printf ( \"Switching from %v to %v\" , oldSink , newSink ) if err := set_pacmd_sink ( newSink . Index ); err != nil { log . Fatalf ( \"set_pacmd_sink %v\" , err ) } if err := notify_send ( \"-i\" , \"audio-volume-high\" , \"Sound output switched to \" + newSink . Name ); err != nil { log . Fatalf ( \"%v\" , err ) } } Salve o arquivo em uma pasta segura, por exemplo /usr/local/bin/audio-device-switch.sh e d\u00ea as permiss\u00f5es de execu\u00e7\u00e3o: Bash sudo chmod 755 /usr/local/bin/audio-device-switch.sh","title":"Source files"},{"location":"tools/audio_device_switch/#versao-go","text":"","title":"Vers\u00e3o go"},{"location":"tools/audio_device_switch/#configuracoes-de-atalho-de-teclado","text":"Acesse o menu de setup da sua distribui\u00e7\u00e3o, e informe o nome do atalho (Audio Device Switch, no meu caso), o local onde o script est\u00e1 salvo, e o atalho que voc\u00ea deseja usar (Eu escolhi Win+F12). Prontinho, agora \u00e9 s\u00f3 aproveitar.","title":"Configura\u00e7\u00f5es de atalho de teclado"},{"location":"tools/http_server_for_testing/","tags":["docker","http","server","golang"],"text":"Post created at 2022-03-12 09:53 I needed a http server, small, minimalistic, just for proxy testing. There are many options to do this, but I wanted to create my own solution. A basic golang project, with only native components, generating a docker image with 10MB. Just K.I.S.S. ! The repository for this project is in github.com/guionardo/http_helloworld All what we need to do to use this tool is run a docker command: Bash docker run --rm -p 8080 :8080 guionardo/http_helloworld:latest","title":"HTTP Hello World server for testing purposes"},{"location":"tools/local_mail_notification/","tags":["mail","console","terminal","notification"],"text":"Using local mail as notification tool Post created at 2022-05-04 14:25 I used to run commands and develop into linux terminal, and have some scheduled tasks running in the background. I need to be notified on terminal about some finished processes in a generic form, without depending GUI notifications. By default, every cron job thats writes to console is sent to user local email. So, local email will be my notification messages repository. Setup I used this setup in Ubuntu, but it must works in any distro. Adding current user to mail group Bash $ sudo adduser $USER mail Adding user 'guionardo' to group 'mail' ... Adding user guionardo to group mail Done. Install mailtools, postfix, and mutt Bash $ sudo apt install mailtools postfix mutt Send test mail Bash $ echo \"This is a test\" | mail \"--subject=Test email\" $USER @localhost Test new mail Bash $ mail \"/var/mail/guionardo\" : 1 message 1 new >N 1 Guionardo Furlan qua mai 4 17 :41 14 /464 Test email ? q Held 1 message in /var/mail/guionardo Ok, we have an e-mail into our inbox. Lets read with better tool. Bash $ mutt Bash q:Quit d:Del u:Undel s:Save m:Mail r:Reply g:Group ?:Help 1 O F mai 04 To guionardo@lo ( 2 ) Test email ---Mutt: /var/mail/guionardo [ Msgs:1 Old:1 0 ,6K ] --- ( threads/date ) ---- ( all ) --- Bash i:Exit -:PrevPg <Space>:NextPg v:View Attachm. d:Del r:Reply j:Next ?:He Date: Wed, 4 May 2022 17 :41:20 +0000 ( UTC ) From: Guionardo Furlan <guionardo@furlan-server> To: guionardo@localhost Subject: Test email X-Mailer: mail ( GNU Mailutils 3 .7 ) This is a test -O F- 1 /1: Guionardo Furlan Test email -- ( all ) Setup for notifications Add this content to your ~/.profile or equivalent file (.bashrc, .zshrc, etc): Bash MAIL_CHECK_TIME = 0 mail_prompt () { local pwd = '~' local MAIL_SECONDS_DIFF = $MAILCHECK local MAIL_ELAPSED_SECONDS = $(( SECONDS - MAIL_CHECK_TIME )) [ \" $PWD \" ! = \" $HOME \" ] && pwd = ${ PWD /# $HOME \\/ / \\~\\/ } printf \"\\033]0;%s@%s:%s\\033\\\\%s\" \" ${ USER } \" \" ${ HOSTNAME %%.* } \" \" ${ pwd } \" if [[ \" $MAIL_CHECK_TIME \" -eq \"0\" || \" $MAIL_ELAPSED_SECONDS \" -gt \" $MAIL_SECONDS_DIFF \" ]] ; then local MAILX = \" $( mailx 2 >/dev/null & ) \" UNREADEN_REGEX = \"\\s([0-9]{1,4})\\sn\" [[ $MAILX = ~ $UNREADEN_REGEX ]] && UNREADEN = $( echo \" ${ BASH_REMATCH [1] } \" ) || UNREADEN = 0 local COUNT = $(( UNREADEN )) local MESSAGE_TEXT = \"message\" if [ \" $COUNT \" -gt \"0\" ] ; then if [ \" $COUNT \" -gt \"1\" ] ; then MESSAGE_TEXT = \"messages\" fi echo \" $COUNT unreaden $MESSAGE_TEXT . Run mutt\" fi MAIL_CHECK_TIME = $SECONDS fi } if [[ $( which mailx ) ]] ; then PROMPT_COMMAND = \"mail_prompt\" fi Close and reopen your terminal to load this configuration Now, when you access the terminal, messages not readden will show a prompt: Bash 1 unreaden message. Run mutt In your custom scripts, you can send email to your local user and get notified. Extra In WSL/ubuntu, I got an error when installing postfix. Working in it. More links: https://www.cmsimike.com/blog/2011/10/30/setting-up-local-mail-delivery-on-ubuntu-with-postfix-and-mutt/","title":"Using local mail as notification tool"},{"location":"tools/local_mail_notification/#using-local-mail-as-notification-tool","text":"Post created at 2022-05-04 14:25 I used to run commands and develop into linux terminal, and have some scheduled tasks running in the background. I need to be notified on terminal about some finished processes in a generic form, without depending GUI notifications. By default, every cron job thats writes to console is sent to user local email. So, local email will be my notification messages repository.","title":"Using local mail as notification tool"},{"location":"tools/local_mail_notification/#setup","text":"I used this setup in Ubuntu, but it must works in any distro. Adding current user to mail group Bash $ sudo adduser $USER mail Adding user 'guionardo' to group 'mail' ... Adding user guionardo to group mail Done. Install mailtools, postfix, and mutt Bash $ sudo apt install mailtools postfix mutt Send test mail Bash $ echo \"This is a test\" | mail \"--subject=Test email\" $USER @localhost Test new mail Bash $ mail \"/var/mail/guionardo\" : 1 message 1 new >N 1 Guionardo Furlan qua mai 4 17 :41 14 /464 Test email ? q Held 1 message in /var/mail/guionardo Ok, we have an e-mail into our inbox. Lets read with better tool. Bash $ mutt Bash q:Quit d:Del u:Undel s:Save m:Mail r:Reply g:Group ?:Help 1 O F mai 04 To guionardo@lo ( 2 ) Test email ---Mutt: /var/mail/guionardo [ Msgs:1 Old:1 0 ,6K ] --- ( threads/date ) ---- ( all ) --- Bash i:Exit -:PrevPg <Space>:NextPg v:View Attachm. d:Del r:Reply j:Next ?:He Date: Wed, 4 May 2022 17 :41:20 +0000 ( UTC ) From: Guionardo Furlan <guionardo@furlan-server> To: guionardo@localhost Subject: Test email X-Mailer: mail ( GNU Mailutils 3 .7 ) This is a test -O F- 1 /1: Guionardo Furlan Test email -- ( all ) Setup for notifications Add this content to your ~/.profile or equivalent file (.bashrc, .zshrc, etc): Bash MAIL_CHECK_TIME = 0 mail_prompt () { local pwd = '~' local MAIL_SECONDS_DIFF = $MAILCHECK local MAIL_ELAPSED_SECONDS = $(( SECONDS - MAIL_CHECK_TIME )) [ \" $PWD \" ! = \" $HOME \" ] && pwd = ${ PWD /# $HOME \\/ / \\~\\/ } printf \"\\033]0;%s@%s:%s\\033\\\\%s\" \" ${ USER } \" \" ${ HOSTNAME %%.* } \" \" ${ pwd } \" if [[ \" $MAIL_CHECK_TIME \" -eq \"0\" || \" $MAIL_ELAPSED_SECONDS \" -gt \" $MAIL_SECONDS_DIFF \" ]] ; then local MAILX = \" $( mailx 2 >/dev/null & ) \" UNREADEN_REGEX = \"\\s([0-9]{1,4})\\sn\" [[ $MAILX = ~ $UNREADEN_REGEX ]] && UNREADEN = $( echo \" ${ BASH_REMATCH [1] } \" ) || UNREADEN = 0 local COUNT = $(( UNREADEN )) local MESSAGE_TEXT = \"message\" if [ \" $COUNT \" -gt \"0\" ] ; then if [ \" $COUNT \" -gt \"1\" ] ; then MESSAGE_TEXT = \"messages\" fi echo \" $COUNT unreaden $MESSAGE_TEXT . Run mutt\" fi MAIL_CHECK_TIME = $SECONDS fi } if [[ $( which mailx ) ]] ; then PROMPT_COMMAND = \"mail_prompt\" fi Close and reopen your terminal to load this configuration Now, when you access the terminal, messages not readden will show a prompt: Bash 1 unreaden message. Run mutt In your custom scripts, you can send email to your local user and get notified.","title":"Setup"},{"location":"tools/local_mail_notification/#extra","text":"In WSL/ubuntu, I got an error when installing postfix. Working in it. More links: https://www.cmsimike.com/blog/2011/10/30/setting-up-local-mail-delivery-on-ubuntu-with-postfix-and-mutt/","title":"Extra"},{"location":"tools/network/","tags":["network","speed","connectivity"],"text":"Network tools My LAN was working at 100Mbps. To improve data transfer here, I bought a new 1GBit switch. In the first moment, nothing changed. All connections was still transfering at 100Mbps. I have machines running Linux and Windows. Checking the NIC of all computers, I see that all of them are 1Gbps compatible. So, let\u00b4s check the NIC\u00b4s. Windows Run this command at the console (powershell or cmd). PowerShell wmic nic where netEnabled = true get name , speed My result: Bash Name Realtek PCIe GBe Family Controller 100000000 Ok, the windows running machine has a Gigabit NIC, but is using only 100Mbps. Should be the lan cable. I switched to a new CAT-5e, and it worked like a charm. New results: Bash Name Realtek PCIe GBe Family Controller 1000000000 Linux In another machine, a server running Debian, I have to check the same thing. Listing the /sys/class/net folder we can get all the NIC\u00b4s (physical and logical). We need to identify the physical. Bash guionardo@furlan-server:~$ ls /sys/class/net br-118e120c0ed5 br-8006552144f0 br-9baa19a039ab br-c031f2fd9034 enp2s0 veth0e1f9f5 veth3edbe57 veth763a5d9 vethff997b4 br-6f4f54be3aa6 br-8b05e808f775 br-be4b1c4c6490 docker0 lo veth0fe6d08 veth5ba2e03 veth7c4fb5c In my case, is the enp2s0 . Now, we need to check the settings of the NIC. Bash cat /sys/class/net/enp2s0/speed The result was: Text Only 100 In linux, we can also use the ethtool command. If it isn\u00b4t installed, run the command sudo apt install ethtool or use the package manager of your linux distro. Bash guionardo@furlan-server:~$ ethtool enp2s0 for enp2s0: Supported ports: [ TP MII ] Supported link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Supported pause frame use: Symmetric Receive-only Supports auto-negotiation: Yes Supported FEC modes: Not reported Advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Advertised pause frame use: Symmetric Receive-only Advertised auto-negotiation: Yes Advertised FEC modes: Not reported Link partner advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Full Link partner advertised pause frame use: Symmetric Receive-only Link partner advertised auto-negotiation: Yes Link partner advertised FEC modes: Not reported Speed: 100Mb/s Duplex: Full Auto-negotiation: on master-slave cfg: preferred slave master-slave status: slave Port: Twisted Pair PHYAD: 1 Transceiver: external MDI-X: Unknown error: Operation not permitted Current message level: 0x000000ff ( 255 ) drv probe link timer ifdown ifup rx_err tx_err Link detected: yes So, I had to replace the ETH cable like previous machine. Bash cat /sys/class/net/enp2s0/speed The new result was: Text Only 1000 Ok, we have a Gigabit connection enabled. Let\u00b4s test it. I\u00b4ll use iperf . On debian, if it isn\u00b4t installed, just run a sudo apt install iperf3 on both machines. On one machine, start a iperf instance, as a server: Bash iperf3 -s `` And on another one, start a iperf client. Check the IP orof the server machine. ``` bash iperf3 -c furlan-server The results: Text Only \u2502guionardo@furlan-server:~$ iperf3 -s /mnt/c/dev \u2502----------------------------------------------------------- \u276f iperf3 -c furlan-server \u2502Server listening on 5201 Connecting to host furlan-server, port 5201 \u2502----------------------------------------------------------- [ 5] local 172.20.185.164 port 51290 connected to 192.168.88.35 port 5201 \u2502Accepted connection from 192.168.88.100, port 58042 [ ID] Interval Transfer Bitrate Retr Cwnd \u2502[ 5] local 192.168.88.35 port 5201 connected to 192.168.88.100 port 58044 [ 5] 0.00-1.00 sec 107 MBytes 896 Mbits/sec 0 3.11 MBytes \u2502[ ID] Interval Transfer Bitrate [ 5] 1.00-2.00 sec 104 MBytes 870 Mbits/sec 0 3.11 MBytes \u2502[ 5] 0.00-1.00 sec 98.2 MBytes 823 Mbits/sec [ 5] 2.00-3.00 sec 101 MBytes 850 Mbits/sec 0 3.11 MBytes \u2502[ 5] 1.00-2.00 sec 105 MBytes 877 Mbits/sec [ 5] 3.00-4.00 sec 105 MBytes 881 Mbits/sec 0 3.11 MBytes \u2502[ 5] 2.00-3.00 sec 101 MBytes 851 Mbits/sec [ 5] 4.00-5.00 sec 106 MBytes 891 Mbits/sec 0 3.11 MBytes \u2502[ 5] 3.00-4.00 sec 104 MBytes 876 Mbits/sec [ 5] 5.00-6.00 sec 108 MBytes 902 Mbits/sec 1 2.24 MBytes \u2502[ 5] 4.00-5.00 sec 106 MBytes 888 Mbits/sec [ 5] 6.00-7.00 sec 110 MBytes 923 Mbits/sec 0 2.44 MBytes \u2502[ 5] 5.00-6.00 sec 109 MBytes 912 Mbits/sec [ 5] 7.00-8.00 sec 110 MBytes 923 Mbits/sec 0 2.62 MBytes \u2502[ 5] 6.00-7.00 sec 109 MBytes 917 Mbits/sec [ 5] 8.00-9.00 sec 110 MBytes 923 Mbits/sec 0 2.75 MBytes \u2502[ 5] 7.00-8.00 sec 110 MBytes 919 Mbits/sec [ 5] 9.00-10.00 sec 110 MBytes 923 Mbits/sec 0 2.86 MBytes \u2502[ 5] 8.00-9.00 sec 111 MBytes 928 Mbits/sec - - - - - - - - - - - - - - - - - - - - - - - - - \u2502[ 5] 9.00-10.00 sec 110 MBytes 919 Mbits/sec [ ID] Interval Transfer Bitrate Retr \u2502[ 5] 10.00-10.07 sec 7.32 MBytes 910 Mbits/sec [ 5] 0.00-10.00 sec 1.05 GBytes 898 Mbits/sec 1 sender \u2502- - - - - - - - - - - - - - - - - - - - - - - - - [ 5] 0.00-10.07 sec 1.04 GBytes 891 Mbits/sec receiver \u2502[ ID] Interval Transfer Bitrate \u2502[ 5] 0.00-10.07 sec 1.04 GBytes 891 Mbits/sec receiver iperf Done. \u2502----------------------------------------------------------- \u2502Server listening on 5201 /mnt/c/dev took 10s \u2502----------------------------------------------------------- \u276f \u2502 Links How to Verify the Speed of My NIC? Como saber a velocidade da placa de rede How to test the network speed/throughput between two Linux servers","title":"Network tools"},{"location":"tools/network/#network-tools","text":"My LAN was working at 100Mbps. To improve data transfer here, I bought a new 1GBit switch. In the first moment, nothing changed. All connections was still transfering at 100Mbps. I have machines running Linux and Windows. Checking the NIC of all computers, I see that all of them are 1Gbps compatible. So, let\u00b4s check the NIC\u00b4s.","title":"Network tools"},{"location":"tools/network/#windows","text":"Run this command at the console (powershell or cmd). PowerShell wmic nic where netEnabled = true get name , speed My result: Bash Name Realtek PCIe GBe Family Controller 100000000 Ok, the windows running machine has a Gigabit NIC, but is using only 100Mbps. Should be the lan cable. I switched to a new CAT-5e, and it worked like a charm. New results: Bash Name Realtek PCIe GBe Family Controller 1000000000","title":"Windows"},{"location":"tools/network/#linux","text":"In another machine, a server running Debian, I have to check the same thing. Listing the /sys/class/net folder we can get all the NIC\u00b4s (physical and logical). We need to identify the physical. Bash guionardo@furlan-server:~$ ls /sys/class/net br-118e120c0ed5 br-8006552144f0 br-9baa19a039ab br-c031f2fd9034 enp2s0 veth0e1f9f5 veth3edbe57 veth763a5d9 vethff997b4 br-6f4f54be3aa6 br-8b05e808f775 br-be4b1c4c6490 docker0 lo veth0fe6d08 veth5ba2e03 veth7c4fb5c In my case, is the enp2s0 . Now, we need to check the settings of the NIC. Bash cat /sys/class/net/enp2s0/speed The result was: Text Only 100 In linux, we can also use the ethtool command. If it isn\u00b4t installed, run the command sudo apt install ethtool or use the package manager of your linux distro. Bash guionardo@furlan-server:~$ ethtool enp2s0 for enp2s0: Supported ports: [ TP MII ] Supported link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Supported pause frame use: Symmetric Receive-only Supports auto-negotiation: Yes Supported FEC modes: Not reported Advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Half 1000baseT/Full Advertised pause frame use: Symmetric Receive-only Advertised auto-negotiation: Yes Advertised FEC modes: Not reported Link partner advertised link modes: 10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full 1000baseT/Full Link partner advertised pause frame use: Symmetric Receive-only Link partner advertised auto-negotiation: Yes Link partner advertised FEC modes: Not reported Speed: 100Mb/s Duplex: Full Auto-negotiation: on master-slave cfg: preferred slave master-slave status: slave Port: Twisted Pair PHYAD: 1 Transceiver: external MDI-X: Unknown error: Operation not permitted Current message level: 0x000000ff ( 255 ) drv probe link timer ifdown ifup rx_err tx_err Link detected: yes So, I had to replace the ETH cable like previous machine. Bash cat /sys/class/net/enp2s0/speed The new result was: Text Only 1000 Ok, we have a Gigabit connection enabled. Let\u00b4s test it. I\u00b4ll use iperf . On debian, if it isn\u00b4t installed, just run a sudo apt install iperf3 on both machines. On one machine, start a iperf instance, as a server: Bash iperf3 -s `` And on another one, start a iperf client. Check the IP orof the server machine. ``` bash iperf3 -c furlan-server The results: Text Only \u2502guionardo@furlan-server:~$ iperf3 -s /mnt/c/dev \u2502----------------------------------------------------------- \u276f iperf3 -c furlan-server \u2502Server listening on 5201 Connecting to host furlan-server, port 5201 \u2502----------------------------------------------------------- [ 5] local 172.20.185.164 port 51290 connected to 192.168.88.35 port 5201 \u2502Accepted connection from 192.168.88.100, port 58042 [ ID] Interval Transfer Bitrate Retr Cwnd \u2502[ 5] local 192.168.88.35 port 5201 connected to 192.168.88.100 port 58044 [ 5] 0.00-1.00 sec 107 MBytes 896 Mbits/sec 0 3.11 MBytes \u2502[ ID] Interval Transfer Bitrate [ 5] 1.00-2.00 sec 104 MBytes 870 Mbits/sec 0 3.11 MBytes \u2502[ 5] 0.00-1.00 sec 98.2 MBytes 823 Mbits/sec [ 5] 2.00-3.00 sec 101 MBytes 850 Mbits/sec 0 3.11 MBytes \u2502[ 5] 1.00-2.00 sec 105 MBytes 877 Mbits/sec [ 5] 3.00-4.00 sec 105 MBytes 881 Mbits/sec 0 3.11 MBytes \u2502[ 5] 2.00-3.00 sec 101 MBytes 851 Mbits/sec [ 5] 4.00-5.00 sec 106 MBytes 891 Mbits/sec 0 3.11 MBytes \u2502[ 5] 3.00-4.00 sec 104 MBytes 876 Mbits/sec [ 5] 5.00-6.00 sec 108 MBytes 902 Mbits/sec 1 2.24 MBytes \u2502[ 5] 4.00-5.00 sec 106 MBytes 888 Mbits/sec [ 5] 6.00-7.00 sec 110 MBytes 923 Mbits/sec 0 2.44 MBytes \u2502[ 5] 5.00-6.00 sec 109 MBytes 912 Mbits/sec [ 5] 7.00-8.00 sec 110 MBytes 923 Mbits/sec 0 2.62 MBytes \u2502[ 5] 6.00-7.00 sec 109 MBytes 917 Mbits/sec [ 5] 8.00-9.00 sec 110 MBytes 923 Mbits/sec 0 2.75 MBytes \u2502[ 5] 7.00-8.00 sec 110 MBytes 919 Mbits/sec [ 5] 9.00-10.00 sec 110 MBytes 923 Mbits/sec 0 2.86 MBytes \u2502[ 5] 8.00-9.00 sec 111 MBytes 928 Mbits/sec - - - - - - - - - - - - - - - - - - - - - - - - - \u2502[ 5] 9.00-10.00 sec 110 MBytes 919 Mbits/sec [ ID] Interval Transfer Bitrate Retr \u2502[ 5] 10.00-10.07 sec 7.32 MBytes 910 Mbits/sec [ 5] 0.00-10.00 sec 1.05 GBytes 898 Mbits/sec 1 sender \u2502- - - - - - - - - - - - - - - - - - - - - - - - - [ 5] 0.00-10.07 sec 1.04 GBytes 891 Mbits/sec receiver \u2502[ ID] Interval Transfer Bitrate \u2502[ 5] 0.00-10.07 sec 1.04 GBytes 891 Mbits/sec receiver iperf Done. \u2502----------------------------------------------------------- \u2502Server listening on 5201 /mnt/c/dev took 10s \u2502----------------------------------------------------------- \u276f \u2502","title":"Linux"},{"location":"tools/network/#links","text":"How to Verify the Speed of My NIC? Como saber a velocidade da placa de rede How to test the network speed/throughput between two Linux servers","title":"Links"},{"location":"tools/process_monitoring/","tags":["process","monitoring"],"text":"Generating graphics from processes Procpath is a python CLI tool to record and generate graphics of processes. Example for run a process and get RSS and CPU data Bash # Run the process and continue my_process_binary & # Save the process id from last command pid = $! # record data from process for 60 seconds procpath record -i 1 -r 60 -d process.sqlite '$..children[?(@.stat.pid == $pid)]' # plots the data into a SVG graphic procpath plot -d process.sqlite -q cpu -q rss cpu_rss.svg # Remove data file (optional) rm process.sqlite Source","title":"Process Monitoring Graphics"},{"location":"tools/process_monitoring/#generating-graphics-from-processes","text":"Procpath is a python CLI tool to record and generate graphics of processes. Example for run a process and get RSS and CPU data Bash # Run the process and continue my_process_binary & # Save the process id from last command pid = $! # record data from process for 60 seconds procpath record -i 1 -r 60 -d process.sqlite '$..children[?(@.stat.pid == $pid)]' # plots the data into a SVG graphic procpath plot -d process.sqlite -q cpu -q rss cpu_rss.svg # Remove data file (optional) rm process.sqlite Source","title":"Generating graphics from processes"},{"location":"visual_fox_pro/_bookmarks/","tags":["vfp"],"text":"StreetView any address Dicas gerais Pra V.Foxpro Visual Foxpro Tools Transparent Bitmaps on Buttons and other Controls SaltyDoglLLC Articles Windows API support class Run a VFP app like a Service Creating Custom Visual FoxPro Menus Hacker\u2019s Guide to Visual FoxPro Security in FoxPro (protecting application and data) VFP Brasil : Dicas e Truques VFP How do I use the StatusBar Active-x Control Visual FoxPro como cliente en Internet (II): File Transfer Protocol Win32API for VFP Developers VFP 9.0 SP2 Online Help","title":"Visual Fox Pro bookmarks"},{"location":"vsc_ci_cd/_bookmarks/","text":"git Assinando commits no Git com GPG","title":"Version Control Systems, CI, CD bookmarks"},{"location":"tags/","text":"Tags api Generating QRCode using google api architecture Architecture bookmarks audio Atalho para trocar dispositivo de \u00e1udio no Linux automation Atalho para trocar dispositivo de \u00e1udio no Linux bash Commands and Aliases Cronjob to clean all dotnet projects Creating animated gifs from your terminal Atalho para trocar dispositivo de \u00e1udio no Linux benchmark Fast folder iteration in python c_sharp Valida\u00e7\u00e3o de CPF e CNPJ cnpj Valida\u00e7\u00e3o de CPF e CNPJ connectivity Network tools console Creating animated gifs from your terminal Using local mail as notification tool cpf Valida\u00e7\u00e3o de CPF e CNPJ cron Cronjob to clean all dotnet projects csharp C# bookmarks Cronjob to clean all dotnet projects Fixing DotNet on Ubuntu database MongoDB and PostgreSQL in portainer stack dll Free Pascal Shared DLL docker MongoDB and PostgreSQL in portainer stack MongoDB docker-compose PostgreSQL docker-compose HTTP Hello World server for testing purposes docker-compose MongoDB and PostgreSQL in portainer stack MongoDB docker-compose PostgreSQL docker-compose dotnet Cronjob to clean all dotnet projects Fixing DotNet on Ubuntu environment Python Virtual Environment Setup file system Detecting filesystem events fpc Free Pascal Shared DLL gif Creating animated gifs from your terminal golang Golang bookmarks Detecting filesystem events Atalho para trocar dispositivo de \u00e1udio no Linux HTTP Hello World server for testing purposes http HTTP Hello World server for testing purposes jogo Gerador de ca\u00e7a-palavras js JavaScript bookmarks linux Atalho para trocar dispositivo de \u00e1udio no Linux mail Using local mail as notification tool mongodb MongoDB and PostgreSQL in portainer stack MongoDB docker-compose monitoring Process Monitoring Graphics network Network tools notification Detecting filesystem events Using local mail as notification tool portainer MongoDB and PostgreSQL in portainer stack postgresql MongoDB and PostgreSQL in portainer stack PostgreSQL docker-compose process Process Monitoring Graphics python Python bookmarks Gerador de ca\u00e7a-palavras Fast folder iteration in python Tutorial Metaclass Python Virtual Environment Setup qrcode Generating QRCode using google api server HTTP Hello World server for testing purposes setup Fixing DotNet on Ubuntu shell Commands and Aliases speed Network tools terminal Creating animated gifs from your terminal Using local mail as notification tool tutorial Tutorial Metaclass vfp Free Pascal Shared DLL Visual Fox Pro bookmarks","title":"Tags"},{"location":"tags/#tags","text":"","title":"Tags"},{"location":"tags/#api","text":"Generating QRCode using google api","title":"api"},{"location":"tags/#architecture","text":"Architecture bookmarks","title":"architecture"},{"location":"tags/#audio","text":"Atalho para trocar dispositivo de \u00e1udio no Linux","title":"audio"},{"location":"tags/#automation","text":"Atalho para trocar dispositivo de \u00e1udio no Linux","title":"automation"},{"location":"tags/#bash","text":"Commands and Aliases Cronjob to clean all dotnet projects Creating animated gifs from your terminal Atalho para trocar dispositivo de \u00e1udio no Linux","title":"bash"},{"location":"tags/#benchmark","text":"Fast folder iteration in python","title":"benchmark"},{"location":"tags/#c_sharp","text":"Valida\u00e7\u00e3o de CPF e CNPJ","title":"c_sharp"},{"location":"tags/#cnpj","text":"Valida\u00e7\u00e3o de CPF e CNPJ","title":"cnpj"},{"location":"tags/#connectivity","text":"Network tools","title":"connectivity"},{"location":"tags/#console","text":"Creating animated gifs from your terminal Using local mail as notification tool","title":"console"},{"location":"tags/#cpf","text":"Valida\u00e7\u00e3o de CPF e CNPJ","title":"cpf"},{"location":"tags/#cron","text":"Cronjob to clean all dotnet projects","title":"cron"},{"location":"tags/#csharp","text":"C# bookmarks Cronjob to clean all dotnet projects Fixing DotNet on Ubuntu","title":"csharp"},{"location":"tags/#database","text":"MongoDB and PostgreSQL in portainer stack","title":"database"},{"location":"tags/#dll","text":"Free Pascal Shared DLL","title":"dll"},{"location":"tags/#docker","text":"MongoDB and PostgreSQL in portainer stack MongoDB docker-compose PostgreSQL docker-compose HTTP Hello World server for testing purposes","title":"docker"},{"location":"tags/#docker-compose","text":"MongoDB and PostgreSQL in portainer stack MongoDB docker-compose PostgreSQL docker-compose","title":"docker-compose"},{"location":"tags/#dotnet","text":"Cronjob to clean all dotnet projects Fixing DotNet on Ubuntu","title":"dotnet"},{"location":"tags/#environment","text":"Python Virtual Environment Setup","title":"environment"},{"location":"tags/#file-system","text":"Detecting filesystem events","title":"file system"},{"location":"tags/#fpc","text":"Free Pascal Shared DLL","title":"fpc"},{"location":"tags/#gif","text":"Creating animated gifs from your terminal","title":"gif"},{"location":"tags/#golang","text":"Golang bookmarks Detecting filesystem events Atalho para trocar dispositivo de \u00e1udio no Linux HTTP Hello World server for testing purposes","title":"golang"},{"location":"tags/#http","text":"HTTP Hello World server for testing purposes","title":"http"},{"location":"tags/#jogo","text":"Gerador de ca\u00e7a-palavras","title":"jogo"},{"location":"tags/#js","text":"JavaScript bookmarks","title":"js"},{"location":"tags/#linux","text":"Atalho para trocar dispositivo de \u00e1udio no Linux","title":"linux"},{"location":"tags/#mail","text":"Using local mail as notification tool","title":"mail"},{"location":"tags/#mongodb","text":"MongoDB and PostgreSQL in portainer stack MongoDB docker-compose","title":"mongodb"},{"location":"tags/#monitoring","text":"Process Monitoring Graphics","title":"monitoring"},{"location":"tags/#network","text":"Network tools","title":"network"},{"location":"tags/#notification","text":"Detecting filesystem events Using local mail as notification tool","title":"notification"},{"location":"tags/#portainer","text":"MongoDB and PostgreSQL in portainer stack","title":"portainer"},{"location":"tags/#postgresql","text":"MongoDB and PostgreSQL in portainer stack PostgreSQL docker-compose","title":"postgresql"},{"location":"tags/#process","text":"Process Monitoring Graphics","title":"process"},{"location":"tags/#python","text":"Python bookmarks Gerador de ca\u00e7a-palavras Fast folder iteration in python Tutorial Metaclass Python Virtual Environment Setup","title":"python"},{"location":"tags/#qrcode","text":"Generating QRCode using google api","title":"qrcode"},{"location":"tags/#server","text":"HTTP Hello World server for testing purposes","title":"server"},{"location":"tags/#setup","text":"Fixing DotNet on Ubuntu","title":"setup"},{"location":"tags/#shell","text":"Commands and Aliases","title":"shell"},{"location":"tags/#speed","text":"Network tools","title":"speed"},{"location":"tags/#terminal","text":"Creating animated gifs from your terminal Using local mail as notification tool","title":"terminal"},{"location":"tags/#tutorial","text":"Tutorial Metaclass","title":"tutorial"},{"location":"tags/#vfp","text":"Free Pascal Shared DLL Visual Fox Pro bookmarks","title":"vfp"}]}